{# src/AppBundle/Resources/views/pointform.html.twig #}
{{ form_start(point_form, {'attr': {'class': 'form-horizontal','id': 'point_form'}}) }}

	<table class="ui-front table_edit">
		<TR>
			<TH class="title_table_edit" width="100%" colspan = "6">
				Location points
			</TH>
		</TR>

		<TR>
			<TD>
				<Table width="100%">
					<TR>
						<th width = "12%"  style="text-align:right">
							Collection:
						</th>
						<td width = "12%">
							{% if dloccenter.pk != "" %}
								{{dloccenter.idcollection}}
							{% else %}
								{{ form_widget(point_form.idcollection, {'attr': {'class': 'form-control inp_Idcollection'}}) }}
							{% endif %}
						</td>
						<th width = "12%" style="text-align:right">
							ID :
						</th>
						<td  width = "12%">
							{% if dloccenter.pk != "" %}
								{{dloccenter.idpt}}
							{% else %}
								{{ form_widget(point_form.idpt, {'attr': {'class': 'form-control inp_PointID vshortlength'}}) }}
								{{ form_errors(point_form.idpt) }}
							{% endif %}
						</td>

						<th width = "15%"  style="text-align:right">
							Field number:
						</th>
						<td  width = "65%" colspan = "3">
							{{ form_widget(point_form.fieldnum, {'attr': {'class': 'form-control inp_Fieldnum'}}) }}
						</td>
					</tr>
					<tr>
						<TH  style="text-align:right">
							Place:
						</TH>
						<td >
							{{ form_widget(point_form.place, {'attr': {'class': 'form-control inp_Place'}}) }}
						</td>
						<TH  style="text-align:right">
							Country:
						</TH>
						<td >
							{{ form_widget(point_form.country, {'attr': {'class': 'form-control inp_Country'}}) }}
						</td>
						<TH  style="text-align:right">
							Doc reference:
						</TH>
						<td>
							{{ form_widget(point_form.docref, {'attr': {'class': 'form-control inp_Docref'}}) }}
						</td>
					</tr>
					<tr>
						<TH  style="text-align:right">
							Date:
						</TD>
						<td >
							{{ form_widget(point_form.date, {'attr': {'class': 'form-control inp_Date js-datepicker'}}) }}
						</td>
					</tr>
					<tr>
						<TH  style="text-align:right">
							Geographical description:
						</TD>
						<td >
							{{ form_widget(point_form.geodescription, {'attr': {'class': 'form-control inp_Geodescription'}}) }}
						</td>
						<TH  style="text-align:right">
							Description of the position:
						</TD>
						<td >
							{{ form_widget(point_form.positiondescription, {'attr': {'class': 'form-control inp_Positiondescription'}}) }}
						</td>
					</tr>
					<tr>
						<TH  style="text-align:right">
							Various info:
						</TD>
						<td >
							{{ form_widget(point_form.variousinfo, {'attr': {'class': 'form-control inp_Variousinfo'}}) }}
						</td>
					</tr>
					<tr>
						<TH  style="text-align:right">
							Precision:
						</TD>
						<TD>
							{{ form_widget(point_form.idprecision, {'attr': {'class': 'form-control inp_Idprecision'}}) }}
						</TD>
					</tr>
					<tr>
						<TD> .</TD>
					</TR>
				</Table>
			</TD>
		</TR>
		<tr >
			<TD>
				{% set i=0 %}
				{% set j=0 %}
				{% set k=0 %}
				{% set kk=0 %}
				{% set idcontribm1 = 0 %}
				{% set dd=0 %}
				<div class="widget">
					{% if  originaction  == 'edit' or originaction == 'add_aftercommit' %}
						<ol class="widget-list" id="Contributions">
							<div>
								<Table class="table_view">
									<TR>
										<TD width="50%"  class="celltop">	
											<Table class="contributionsTitle newLine table_results2" style="display:none">
												<TR>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">ID </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Type </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Date </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Year </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">ID </label>
													</TH>
													<TH width="20%" class="border_bottom">
														<label class="labelsview">Contributor </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Role(order) </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Function </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Title </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Status </label>
													</TH>
													<TH width="20%" class="border_bottom">
														<label class="labelsview">Institute </label>
													</TH>
												</TR>

												{% set idcontribm1 = 0 %}
												{% if arrayLinkcontributions is defined %}		
													{% if arrayLinkcontributions|length > 0 %}
														{% for Linkcontributions in arrayLinkcontributions %}
															{% for Linkcontribution in Linkcontributions %}	
																{% if idcontribm1 != Linkcontribution.idcontribution %}
																	{% set kk=kk+1%}
																{% endif %}																			
																<TR id="contributions{{kk}}_{{k}}">
																	{% if idcontribm1 != Linkcontribution.idcontribution %}
																		<TH>
																			{{Linkcontribution.idcontribution}}
																		</TH>
																		<TH>
																			{{Linkcontribution.datetype}}
																		</TH>
																		<TH>
																			{{Linkcontribution.date|date('d-m-Y')}}
																		</TH>
																		<TH>
																			{{ Linkcontribution.year}}
																		</TH>
																	{% else %}
																		<TD colspan="4"></TD>
																	{% endif %}	
																	<TD>
																		{{Linkcontribution.idcontributor}}
																	</TD>
																	<TD>						
																		{{Linkcontribution.people}}
																	</TD>
																	<TD>						
																		{{Linkcontribution.contributorrole}}	{% if (Linkcontribution.contributororder|length > 0) %} ( {{ Linkcontribution.contributororder}} ) {% endif %}					
																	</TD>
																	<TD>						
																		{{Linkcontribution.peoplefonction}}
																	</TD>
																	<TD>						
																		{{Linkcontribution.peopletitre}}
																	</TD>
																	<TD>						
																		{{Linkcontribution.peoplestatut}}
																	</TD>
																	<TD>						
																		{{Linkcontribution.institut}}
																	</TD>
																	{% if idcontribm1 != Linkcontribution.idcontribution %}
																		<TD>
																			<img src="{{ asset('pics/delete.jpg') }}" class="but_deletecontribution_{{Linkcontribution.idcontribution}}" onclick="deleteSamContribution('{{kk}}-{{Linkcontribution.idcontribution}}')" alt="home" height="12" width="13" onmouseover="" style="cursor: pointer;">  
																		</TD>
																	{% else %}
																		<TD></TD>
																	{% endif %}	
																</TR>
																{% set k=k+1%}
																{% set idcontribm1 = Linkcontribution.idcontribution %}
															{% endfor %}	
														{% endfor %}	
													{% else %}
														<TR>
															<div class="nocontrib">
																No contribution
															</div>
														</TR>
													{% endif %}
												{% endif %}																
											</Table>
											<Table width="100%">
												<TR>
													<TD class="newcontribution">
														<BR/><BR/>
														<input type="button" id="but_showaddcontribution" value="Add a contribution"/>	
													</TD>
													
													<TD class="newcontribution" style="display:none" width="15%">
														</BR>
														<label class="labelsview">Type? </label>
														<select id="inp_addnewcontributionType" class="inp_addnewcontributionType" style="max-width:150px;">
															<option value=""></option>
														</select>
													</TD>
													<TD class="newcontribution" style="display:none"  width="15%">
														</BR>
														<label class="labelsview">Year? </label>
														<select id="inp_addnewcontributionYear" class="inp_addnewcontributionYear" style="max-width:150px;">
															<option value=""></option>
														</select>
													</TD>
													<TD class="newcontribution" style="display:none"  width="70%">
													</TD>
												</TR>	
											</Table>
											<Table width="100%">
												<TR>
													<TD class="newcontribution showid" style="display:none">
													</TD>
												</TR>	
											</Table>
											<Table width="100%">
												<TR>
													<TD class="newcontribution" style="display:none">
														<input type="button" id="but_addcontribution" value="Add"  />	
													</TD>
												</TR>							
											</Table>
												
											<input type="hidden" id="newcontributions" name="newcontributions" class="newcontributions" >	
										</TD>
									</TR>														
								</Table>
							</div>		
						</ol>
						<ol class="widget-list" id="Documentation">
						   doc
						</ol>
						<ol class="widget-list" id="Drilling">
							<div>
								<Table class="table_view">
									<TR>
										<TD width="50%"  class="celltop">	
											<Table class="drillingsTitle newLine table_results2">
												<TR>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Drilling </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Diameter </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Unit of diameter </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Waterflow </label>
													</TH>
													<TH width="5%" class="border_bottom">
														<label class="labelsview">Resting water </label>
													</TH>
													<TH width="20%" class="border_bottom">
														<label class="labelsview">Depth water table</label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Info water</label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Info drilling</label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label class="labelsview">Drilling type</label>
													</TH>
												</TR>
												<TR>
													{% if drillings is defined %}														
														{% if drillings|length > 0 %}
															{% for drilling in drillings %}																	
																<TH>									
																	<input type="text" id="inp_drill-drilling" name="inp_drill-drilling" class="inp_drill-drilling" value=0>
																</TH>
																<TH>
																	<input type="text" id="inp_drill-diameter" name="inp_drill-diameter" class="inp_drill-diameter" value=0>
																</TH>
																<TH>
																	<input type="text" id="inp_drill-unitdiameter" name="inp_drill-unitdiameter" class="inp_drill-unitdiameter" value=0>
																</TH>
																<TH>
																	<input type="text" id="inp_drill-waterflow" name="inp_drill-waterflow" class="inp_drill-waterflow" value=0>
																</TH>
																<TH>
																	<input type="radio" id="false" name="restingwater" class="restingwater"  value="0" checked="checked"> No
																	<input type="radio" id="true" name="restingwater" class="restingwater"  value="1"> Yes
																	<div style="display:none">
																		<input type="text" id="inp_drill-restingwater" name="inp_drill-restingwater" class="inp_drill-restingwater">
																	</div>
																</TH>
																<TH>
																	<input type="text" id="inp_drill-depthwatertable" name="inp_drill-depthwatertable" class="inp_drill-depthwatertable" value=0>
																</TH>
																<TH>
																	<input type="text" id="inp_drill-infowater" name="inp_drill-infowater" class="inp_drill-infowater" value=0>
																</TH>
																<TH>
																	<input type="text" id="inp_drill-infodrilling" name="inp_drill-infodrilling" class="inp_drill-infodrilling" value=0>
																</TH>
																<TH>
																	<TABLE>
																		<TR>
																			<TD>
																				{% if drillingttypes is defined %}													
																					{% if drillingttypes|length > 0 %}
																						{% for drillingttype in drillingttypes %}	
																							<div id="drilltype{{dd}}">
																								<input type="text" id="inp_drilltype-drillingtype_{{dd}}" name="inp_drilltype-drillingtype_{{dd}}" class="inp_drilltype-drillingtype_{{dd}}" >
																								<img src="{{ asset('pics/delete.jpg') }}" class="but_deletedrillingtype_{{dd}}" onclick="deletedrillingtype('{{dd}}')" alt="home" height="12" width="13" onmouseover="" style="cursor: pointer;">  
																							</div>
																							{% set dd=dd+1%}
																						{% endfor %}	
																					{% endif %}	
																				{% else %}
																					<div class="nodrilling">
																						No drilling type
																					</div>
																				{% endif %}
																			</TD>
																		</TR>
																		<TR class="newlinedrilltype"> <!-- style="display:none">-->
																			<TD><div class="newdrilltype_container"></div></TD>
																		</TR>
																		<TR>
																			<TD> <!--class="newmineral">-->
																				<input type="button" id="but_showadddrilltype" value="Add a type"  />		
																			</TD>
																		</TR>
																			<!--<TD class="newmineral" style="display:none">
																				<input type="button" id="but_adddrilltype" value="Add"  />	
																			</TD>-->
																	</TABLE>
																	<input type="hidden" id="newdrilltypes" name="newdrilltypes" class="newdrilltypes" > 
																</TH>
																
															{% endfor %}	
														{% else %}
																<TR>
																	<div class="nodrilling">
																		No drilling
																	</div>
																</TR>
														{% endif %}
													{% endif %}		
												</TR>
											</TABLE>
										</TD>
									</TR>														
								</Table>
							</div>		
						</ol>
						<ol class="widget-list" id="Strata1">
							<div>
								<Table class="table_view">
									<TR>
										<TD width="50%"  class="celltop">	
											<Table class="stratumTitle newLine table_results2" style="display:none">
												<TR>
													<TH width="5%" class="border_bottom">
														<label for="inp_mineralID" class="labelsview">ID </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label for="inp_mineralname" class="labelsview">Name </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label for="inp_mineralgrade" class="labelsview">Grade </label>
													</TH>
													<TH width="10%" class="border_bottom">
														<label for="inp_mineralrank" class="labelsview">Rank </label>
													</TH>
													<TH width="40%" class="border_bottom">
														<label for="inp_mineralformula" class="labelsview">Formula </label>
													</TH>
													<TH width="25%" colspan="2" class="border_bottom">
														<label for="inp_mineralparent" class="labelsview">Parent </label>
													</TH>
												</TR>
											</Table>
											<Table>
												<TR>
													<TD class="newmineral">
														<BR/>
														<input type="button" id="but_showaddstratum" value="Add a stratum"  />		
													</TD>
													<TD class="newmineral" style="display:none">
														<label class="labelsview">Mineral name: </label>
													</TD>
													<TD class="newmineral" colspan=2 style="display:none">
														<select class="inp_addnewmineralname">
															<option value="all"></option>
														</select>
													</TD>
													<TD class="newmineral" style="display:none">
														<label class="labelsview">Grade: </label>
													</TD>
													<TD class="newmineral" style="display:none">
														<input type="integer" class="inp_addnewmineralgrade" >
													</TD>
													<TD class="newmineral" style="display:none">
													</TD>
												</TR>		
												<TR>
													<TD class="newmineral" style="display:none">
														<label class="labelsview">Mineral name(Florias): </label>
													</TD>
													<TD class="newmineral" style="display:none">
														<select class="inp_addnewmineralFname">
															<option value="all"></option>
														</select>
													</TD>
													<TD class="newmineral" colspan=3 style="display:none">
													</TD>
													<TD class="newmineral" style="display:none">
														<input type="button" id="but_addmineral" value="Add"  />	
													</TD>
												</TR>																
											</Table>
											<input type="hidden" id="newgrades" name="newgrades" class="newgrades" >	
										</TD>
									</TR>														
								</Table>
							</div>
						</ol>
					{% endif %}
					<ol class="widget-list" id="Geographical_info">
						<div>
							<Table class="table_view">
								<tr>
									<td colspan="3" id="ol_map">
										<style >
											p.collapse{
												display:none;
											}
										</style>

										<table>
											<tr>
												<TH  style="text-align:right" colspan="2">Altitude:</TH>
												<td  colspan="3"> {{ form_widget(point_form.altitude, {'attr': {'class': 'form-control inp_Altitude vshortlength'}}) }}m
													<!--<input type="text" id="inp_altitude" name="inp_altitude" class="inp_altitude vshortlength">m-->
												</td>
											</tr>
											<tr>
												<TH  style="text-align:right" colspan="2">
													<b>Coordinates source:</b>
												</TH>
												<td>
													<select id="inp_searchcoord_source" class="inp_searchcoord_source">
														<option value="DD">Decimal</option>
														<option value="DMS">Degree Minutes Seconds</option>
														<option value="UTM">UTM</option>
													</select>
												</td>
											</tr>
											<tr>
												<TH  style="text-align:right" colspan="2">
													<label><b>Geometry type :</b></label>
												</TH>
												<td>
													<form class="form-inline">
														<select name="typegeom" id="type" class="typegeom">
														  <option value="Point">Point</option>
														  <option value="LineString">LineString</option>
														  <option value="Polygon">Polygon</option>
														</select>
														<label class="points_for_geometry"></label>
													  </div>
													</form>
												</td>
											</tr>
											<!--<tr>
												<th colspan="3">
													<label>Enter coordinates :</label>
												</th>
											</tr>-->
											<tr>
												<td width=20"></td>
												<td colspan="2">
													<form class="list_points">
														<div class="GroupDMS" style="display: None">
															<table>
																<tr>
																	<td colspan="7"><b>Latitude:</b></td>
																	<td colspan="7"><b>Longitude:</b></td>
																</tr>
																<tr>
																	<td><input class="lati_deg_0 vshortlength" type="text" maxlength = "3" value=0></td>
																	<td>deg.</td>
																	<td><input class="lati_min_0 vshortlength" type="text" maxlength="2" value=0></td>
																	<td>min.</td>
																	<td><input class="lati_sec_0 vshortlength" type="text" maxlength="8" value=0></td>
																	<td>sec.</td>
																	<td style="border-right: 1px solid #000000;">
																		<select class="latns_0">
																			<option value="S">S</option>
																			<option value="N">N</option>
																		</select>
																	</td>
																	<td>&nbsp;<input class="longi_deg_0 vshortlength" type="text" maxlength="2" value=0></td>
																	<td>deg.</td>
																	<td><input class="longi_min_0 vshortlength" type="text" maxlength="2" value=0></td>
																	<td>min.</td>
																	<td><input class="longi_sec_0 vshortlength" type="text" maxlength="8" value=0></td>
																	<td>sec.</td>
																	<td><select class="longew_0">
																			<option value="E">E</option>
																			<option value="W">W</option>
																		</select>
																	</td>
																</tr>
															</table>
														</div>
														<div class="GroupDD" style="display: None">
															<table>
																<tr>
																	<td style="min-width:100px"></td>
																	<TH>Latitude:</TH>
																	<TH>&nbsp;Longitude:</TH>
																</tr>
																<tr>
																	<td style="min-width:100px"></td>
																	<td style="padding-left: 10px; padding-right: 10px;">
																		<input type="text" id="latiDD_0" name="latiDD_0" class="latiDD_0 vshortlength">
																	</td>
																	<td style="padding-left: 10px; padding-right: 10px;">
																		<input type="text" id="longiDD_0" name="longiDD_0" class="longiDD_0 vshortlength">
																	</td>
																</tr>
															</table>
														</div>
														<div class="GroupUTM" style="display: None">
															<table>
																<tr>
																	<TD>X (meters):</TD>
																	<TD>&nbsp;Y (meters):</TD>
																	<TD>Zone:</TD>
																	
																</tr>
																<tr>
																	<td>
																		<input class="longiUTM_0 vshortlength" type="text" maxlength="12" value=0>
																	</td>
																	<td>
																		&nbsp;<input class="latiUTM_0 vshortlength" type="text" maxlength="12" value=0>
																	</td>
																	<td>
																		<input class="zoneUTM_0" type="integer" size="2" min="1" max="60">
																		<select class="dirUTM_0">
																			<option value="S">S</option>
																			<option value="N">N</option>
																		</select>
																		
																	</td>
																</tr>
															</table>
														</div>
														<BR><div class="GroupDMS" id="list_of_coordDMS"></div>
														<div class="GroupDD" id="list_of_coordDD"></div>
														<div class="GroupUTM" id="list_of_coordUTM"></div>
													</form>
												</td>
											</tr>
											<tr>
												<td></td>
												<th colspan="2">
													<label>Show WKT and EPSG fields : </label>
													<input type="checkbox" name="ShowWKT" class="ShowWKT" value="show">
												</TD>
											</tr>
											<tr style="display:none;" class="WKT_show">
												<td></td>
												<TH style="text-align:right">
													WKT:
												</TH>
												<td>
													<!--{ { form_widget(point_form.wkt, {'attr': {'class': 'form-control inp_WKT'}}) }}
													<input class="inp_WKT" type="text">-->
													<label class="inp_WKT"></label>
												</td>
											</tr>
											<!--<tr style="display:none;" class="WKT_show">
												<td></td>
												<TH style="text-align:right">
													Original_coordinates:
												</TH>
												<td>
													{ { form_widget(point_form.originalcoord, {'attr': {'class': 'form-control origcoord inp_original_coordinates shortlength'}}) }}
													<div style="display: None">
														<input class="inp_original_coordinates" type="text">
													</div>
													<label class="origcoordRO">{ {point_form.originalcoord}}</label>
												</td>
											</tr>-->
											<tr style="display:none;" class="WKT_show">
												<td></td>
												<TH style="text-align:right">
													EPSG :
												</TH>
												<td>
													<!--{ { form_widget(point_form.epsg, {'attr': {'class': 'form-control inp_epsg vshortlength epsgRO'}}) }}-->
													<label class="epsgRO"></label>
												</TD>
												<!--<td>
													<div style="display: None">
														<input class="inp_epsg" type="text">
													</div>
													<label class="epsgRO"></label>
													
												</td>-->
											</tr>
											<tr>
												<td></td>
												<td colspan="2">
													<br/><input type="button" name="wkt_to_map" id="wkt_to_map" value="Draw to map"/>
												</td>
											</tr>
										</table>
									</td>
									<td>
										<div class="drawdirectlty">
											<label>Or draw directly on map <BR>(choose first geometry type) :</label>
										</div>
									</td>
									
									<td colspan="2">
										<table>
											<tr>
												<td colspan="4" id="ol_map">
													<style >
														p.collapse{
															display:none;
														}
													</style>
													<!--<input type="button" id="modeMap" name="modeMap" value="Enable selection"></input> -->
													<div  style="width:700px;height:400px;" id="map" class="map"></div>
													<div id="mouse-position"></div>
												</td>
											</tr>
											<tr>
												<td colspan="4">
													 <select id="layer-select">
														<option value="Road">Road</option>
														<option value="Aerial">Aerial</option>
														<option value="AerialWithLabels">Aerial with labels</option>
													 </select>
													<!-- <input type="radio" name="type" value="hover" id="hoverToggle"
											   onclick="toggleControl(this);" />
										<label for="hoverToggle">view WKT for feature</label>-->
												</td>
											</tr>
										</table>
										<input type="button" id="cleanSelect" name="cleanSelect" value="Clean selection"></input>
									</td>
								</tr>
							</table>
						</div>
					</ol>

					<ul class="widget-tabs">
						{% if  originaction  == 'edit' or originaction == 'add_aftercommit' %}
							<li class="widget-tab">
								<a href="#Contributions" class="widget-tab-link">Contributions</a>
							<li class="widget-tab">
								<a href="#Documentation" class="widget-tab-link">Documentation</a>
							<li class="widget-tab">
								<a href="#Drilling" class="widget-tab-link">Drilling</a>
							<li class="widget-tab">
								<a href="#Strata1" class="widget-tab-link">Strata</a>
						{% endif %}
						<li class="widget-tab">
						  <a href="#Geographical_info" class="widget-tab-link" id=tab1a>Geographical info</a>
					</ul>
				</div>
			</TD>
		</TR>
			
		<TR>
			<TD>
			<input type="submit" class="btn btn-default pull-right submitbutton" />
				<div class="alert_message"></div>
			</TD>
		</TR>
	</Table>
{{ form_end(point_form) }}

<script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js"></script>
<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css" type="text/css">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">   
<script src="{{ asset('js/jquery-3.3.1.js') }}"></script>
<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="{{ asset('js/core.js') }}"></script>

<script type="text/javascript">
	var lastdrilltypeindex = "{{dd}}";
	var index = parseInt("{{dd}}");
	var lastdrilltypeindex_start = "{{dd}}";
	var $drilltype_pk = {};
	var $newdrilltypesvals = "";
	var $newcontributionsvals = "";
	var lastContribindex = "{{k}}";
	var lastcontributionindex = 0;
	var formchanged = false;
	var sortDirection = "";
	var source_selected;
	var proj;
	//var $precision;
	var $valprec;
	var p_data_epsg;
	var p_proj_epsg = 'EPSG:3857';
	
	$('.js-datepicker').datepicker({dateFormat: 'dd/mm/yy'});

	$(document).ready(function() {
		//show message saying that data is in DB, during 4 sec. Msg comes from controller
		setTimeout(function() { 
			{% for msg in app.flashes('success') %}
			$(".alert_message").html("{{ msg }}");
			$(".alert_message").fadeOut(2000); 
			{% endfor %}
		},1000); 
		
		{% if arrayLinkcontributions is defined %}		
			{% if arrayLinkcontributions|length > 0 %}			
				$(".contributionsTitle").css('display', 'block'); 
			{% endif %}	
		{% endif %}
				
		$(".newdrilltypes").val("");
		
		$('.restingwater').change(function () {
            $(".inp_drill-restingwater").val($("input[name='restingwater']:checked").val());
        });	
		
		$("#appbundle_dloccenter_coordlong").attr('style', 'display: None');
		$("#appbundle_dloccenter_coordlat").attr('style', 'display: None');
		$("#appbundle_dloccenter_epsg").attr('style', 'display: None');
		$("#appbundle_dloccenter_wkt").attr('style', 'display: None');
		//$("#appbundle_dloccenter_altitude").attr('style', 'display: None');
		$(".control-label").attr('style', 'display: None');
		$(".latiDD_0").val($("#appbundle_dloccenter_coordlat").val());
		$(".longiDD_0").val($("#appbundle_dloccenter_coordlong").val());
		//$(".inp_altitude").val($("#appbundle_dloccenter_altitude").val());
		$(".inp_WKT").html('{{dloccenter.wkt}}');
		
		if ('{{dloccenter.epsg}}' == ""){
				p_data_epsg= 'EPSG:4326';
		}else{
			if ('{{dloccenter.epsg}}'.indexOf("EPSG") >= 0){
				p_data_epsg= '{{dloccenter.epsg}}';
			}else{
				p_data_epsg= 'EPSG:{{dloccenter.epsg}}';
			}
		}
		$(".epsgRO").html(p_data_epsg);
		
		$(".submitbutton").click(saveclic);
		
		{% if drillings is defined %}
			{% for drillings_item in drillings %}
					$(".inp_drill-drilling").val("{{drillings_item.drilling}}");
					$(".inp_drill-diameter").val("{{drillings_item.diameter}}");
					$(".inp_drill-unitdiameter").val("{{drillings_item.unitdiameter}}");
					$(".inp_drill-waterflow").val("{{drillings_item.waterflow}}");
					$("input[name=restingwater][value='{{drillings_item.restingwater}}']").prop('checked', true);
					$(".inp_drill-restingwater").val('{{drillings_item.restingwater}}');
					$(".inp_drill-depthwatertable").val("{{drillings_item.depthwatertable}}");
					$(".inp_drill-infowater").val("{{drillings_item.infowater}}");
					$(".inp_drill-infodrilling").val("{{drillings_item.infodrilling}}");
			{% endfor %}	
		{% endif %}
		{% set dd=0%}
		{% if drillingttypes is defined %}
			{% for drillingttypes_item in drillingttypes %}
				$drilltype_pk['{{dd}}'] = "{{drillingttypes_item.pk}}"; 
				$(".inp_drilltype-drillingtype_{{dd}}").val("{{drillingttypes_item.drillingtype}}");
				{% set dd=dd+1%}
			{% endfor %}	
		{% endif %}
	/*	

		{ % set arrayeditvals = editvals|split(',,') %}
		{ % set elem = {} %}
		{ % for e in arrayeditvals %}
		{ % 		set elem1 = e|split(':') %}
		{ %  	set elem = elem|merge({(elem1[0]):(elem1[1])}) %}
		{ % endfor %}*/
				
	/*	{% if lprecision is defined %}
			{% for lprecision_item in lprecision %}
				$precision="{{lprecision_item.precision}}";
			{% endfor %}	
		{% endif %}
		
		i=0;
		{% if lprecisionlist is defined %}
			{% for lprecisionlist_item in lprecisionlist %}
				$("#inp_Idprecision").append(new Option("{{lprecisionlist_item.precision}}", i));
				if ("{{lprecisionlist_item.precision}}" == $precision){
					$valprec = i;
				}
				i=i+1;
			{% endfor %}	
		{% endif %}
		$("#inp_Idprecision").val($valprec);*/
		
		{% if originaction is defined  %}
			{% if originaction == 'add_beforecommit' %}
				$(".inp_PointID").val("");
				$(".submitbutton").prop('value', 'Create');
			{% endif %}
			{% if originaction != 'add_beforecommit' %}
				$(".inp_Idcollection").attr("disabled","disabled") 
				$(".inp_PointID").attr("disabled","disabled") 
				
				document.getElementById("tab1a").click();
			/*	var url = '{{ path("app_edit_point", {'pk': 'article_id'}) }}'; 
				url = url.replace("article_id", "{{dloccenter.pk}}");
				window.location = url+"#tab1";*/
			{% endif %}
			{% if (originaction == 'edit') or (originaction == 'add_aftercommit') %}
				$(".submitbutton").prop('value', 'Save');
				//to go on first tab geography at form load
				document.getElementById("tab1a").click();
				{% if arraydloclitho|length > 1 %}
					$(".stratumTitle").css("display", ""); 
				{% endif %}
			{% endif %}
			{% if originaction == 'add_aftercommit' %}
				alert('Data recorded in database!');
			{% endif %}
		{% endif %}
		
		var collval = "";
		onElementModified('body', '.inp_Idcollection', function(element){
			collval = $('.inp_Idcollection option:selected').val();
		});	
		var collSelect = $(".inp_Idcollection");
		
		var lastid = 0;
	
		//ajax to fill the lists------
		collval = $('.inp_Idcollection option:selected').val();
		
		function fill_lastid(collval){
			path = "{{path('app_last_Locationid', {'querygroup': 'art'}) }}";  
			path = path.replace('art',collval);
			lastid = 0;
			$.ajax({
				url:  path,
				type: "GET",
				dataType: "JSON",
				success: function (ids) {
					$.each(ids, function (key, id) {
						lastid = id.idpt;
					});

					$(".inp_PointID").attr("data-toggle", "tooltip");
					$(".inp_PointID").attr("data-placement", "top");
					$(".inp_PointID").attr("title", "Last value is "+lastid);
				},
				error: function (err) {
					alert("An error ocurred while loading data ...");
				}
			});
		};
		fill_lastid(collval);
		
		//code if coll changed------	
		$('.inp_Idcollection').on('change', function() {
			collval = $('.inp_Idcollection option:selected').val();
			coderesults = [];
			fill_lastid(collval);
		});
		
		function fill_IDComobox(){
			$.ajax({
				url: "{{ path('app_IDContributions_list')  }}",  
				data : {code:$(".inp_addnewcontributionType option:selected").val()+"--"+$(".inp_addnewcontributionYear option:selected").val()}, 
				type: "GET",
				dataType: "JSON",
				success: function (donnees) {
					var i = 0;
					$.each(donnees, function (key, donnee) {
						i++;
					});
					
					if (i==0){
						$(".showid").html("ID not found");
					}
					else{
						$(".showid").html('<label class="labelsview">ID? </label><select id="inp_addnewcontributionID" name="inp_addnewcontributionID" class="inp_addnewcontributionID"></select>');
					}
					$.each(donnees, function (key, donnee) {
						$(".inp_addnewcontributionID").append('<option value="' + donnee.idfull + '">' + donnee.idfull + '</option>');
					});
				},
				error:function(XMLHttpRequest) { 
					$(".addnewcontributionID").html("No ID found");
				}       
			});
			$(".showid").css('display', 'block');
		};
		$('.inp_addnewcontributionType').on('change', function() {
			fill_IDComobox();
		});
		
		$('.inp_addnewcontributionYear').on('change', function() {
			fill_IDComobox();
		});
		
		function fill_comboboxes(entry_field,codeval){
			$.ajax({
				url: "{{ path('app_contribdata_combobox')  }}",  
				data : {code:codeval}, 
				type: "GET",
				dataType: "JSON",
				success: function (donnees) {
					$.each(donnees, function (key, donnee) {
						entry_field.append('<option value="' + donnee.valdata + '">' + donnee.valdata + '</option>');
					});
					//collval = $('.inp_searchcoll option:selected').val();
				},
				error: function (err) {
					alert("An error ocurred while loading data ...");
				}
			});
		}
		fill_comboboxes($(".inp_addnewcontributionType"),1);
		fill_comboboxes($(".inp_addnewcontributionYear"),8);

		checkCoordSourceState();
		drawmap();
		addInteraction();
		
		var origin = 0;

		if($('.inp_WKT').html().length != 0){
			GenWKT_and_draw(origin);
			fill_points_lines_from_wkt(1);
			//fill_points_lines_from_original_values();
		}else{
			var testlength=0;
			testlength =  parseFloat($(".lati_deg_0").val()) +  parseFloat($(".latiDD_0").val()) +  parseFloat($(".latiUTM_0").val());
			//testlength = $(".DMSLatDeg").val() + $(".convertDMS2DDLat").val() + $(".UTMLat").val();

			if(testlength != 0 & !isNaN(testlength)){
				var wktfromlatlong = "";
				var latsign = "S";
				var longsign = "W";
				var DMSLatSec = 0;
				var DMSLongSec = 0;
				typegeom = "Point";
				nbrpoints = 1;
				$('.nbrpoints').val(1);
				GenWKT_and_draw(1);
			}else{
				typegeom = "None";
				nbrpoints=0;
			}
				//$('.points_for_geometry').html('<i>Enter latitude-longitude of points A and B:</i><img src="{{ asset('pics/rect_2points.jpg') }}" alt="home" height="50" width="50">');
			draw_points_input_fields(1);
			$('.nbrpoints').val(1);
			//
		}

		$('.ShowWKT').click(function() {
			$(".WKT_show").toggle(this.checked);
		});

		showDMSCoordinates=false;
	});
	
	//test if for changed-----------
	$(window).blur(function() {
		if (formchanged == true){
	//		resp = confirm("Don't forget to save your work !");
		}
	});
	
	$('form :input').change(function() {
		formchanged = true;
	});
	
	/*function change(){
		for (i=0;i<lastdrilltypeindex;i++){
		alert ("chang--"+i  + "    " + $drilltype_pk[i]);
			$(".inp_drilltype-drillingtype_"+i).on('change',(function() {
			alert ("chang"+i  + "    " + $drilltype_pk[i]);
				//$idmineral = $(this).closest('tr').children('td').children('label').html();
				$newdrilltypesvals = $newdrilltypesvals + "," + $drilltype_pk[i] +"-"+$(this).val()+"-U";
				$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
			}));
		};
	};
	change();*/
	$(".inp_drilltype-drillingtype_0").on('change',(function() {
	alert("change0");
		if (lastdrilltypeindex_start >= 0){
			$newdrilltypesvals = $newdrilltypesvals + "," + $drilltype_pk[0] +"-"+$(this).val()+"-U";
		}else{
			$newdrilltypesvals = $newdrilltypesvals + ",-"+$(this).val()+"-I";
		}
		$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
	}));
	$(".inp_drilltype-drillingtype_1").on('change',(function() {
	alert("change1");
		if (lastdrilltypeindex_start >= 1){
			$newdrilltypesvals = $newdrilltypesvals + "," + $drilltype_pk[1] +"-"+$(this).val()+"-U";
		}else{
			$newdrilltypesvals = $newdrilltypesvals + ",-"+$(this).val()+"-I";
		}
		$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
	}));
	
	$(".inp_drilltype-drillingtype_3").on('change',(function() {
	alert("change3");
		if (lastdrilltypeindex_start >= 3){
			$newdrilltypesvals = $newdrilltypesvals + "," + $drilltype_pk[3] +"-"+$(this).val()+"-U";
		}else{
			$newdrilltypesvals = $newdrilltypesvals + ",-"+$(this).val()+"-I";
		}
		$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
	}));
	$(".inp_drilltype-drillingtype_4").on('change',(function() {
		if (lastdrilltypeindex_start >= 4){
			$newdrilltypesvals = $newdrilltypesvals + "," + $drilltype_pk[4] +"-"+$(this).val()+"-U";
		}else{
			$newdrilltypesvals = $newdrilltypesvals + ",-"+$(this).val()+"-I";
		}
		$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
	}));
	
	function deletedrillingtype(iddrilltype) {
		var r = confirm("Are you sure to delete that type?");
		if (r == true) {
			//var idx = idmin.indexOf("-"); 
			//var i = idmin.substring(0,idx);
			//var id = idmin.substring(idx+1);
			$fieldname = "#drilltype"+iddrilltype;
			$($fieldname).html(""); 
			$newdrilltypesvals = $newdrilltypesvals + "," + $drilltype_pk[iddrilltype] +"-"+$("inp_drilltype-drillingtype_"+i).val()+"-D";
			$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
		} 
	}
	
	$('#but_showadddrilltype').click(function(e){
		asset = '{{ asset("pics/delete.jpg") }}';
		strhtml = '<input type="text" id="inp_drilltype-drillingtype_'+index+'" name="inp_drilltype-drillingtype_'+index+'" class="inp_drilltype-drillingtype_'+index+'" ><img src="'+asset+'" class="but_deletedrillingtype_'+index+'" onclick="deletedrillingtype('+index+')" alt="home" height="12" width="13" onmouseover="" style="cursor: pointer;">  ';
		$(".newdrilltype_container").html(strhtml);		
		index2=index;
		$(".inp_drilltype-drillingtype_"+index2).on('change',(function() {
		$newdrilltypesvals = $newdrilltypesvals + ",-"+$(this).val()+"-I";
			$(".newdrilltypes").val($newdrilltypesvals.substring(1,$newdrilltypesvals.length));
		}));
		index++;
	});
	
	$('#but_addmineral').click(function(e){
		var minval = $('.inp_addnewmineralname option:selected').text();
		var fminval = $('.inp_addnewmineralFname option:selected').text();
		if (minval == "" & fminval == ""){
			alert("Please select a mineral.");
		}else{
			if ( !($('.inp_addnewmineralgrade').val() > 0)){
				alert("Please enter a grade.");
			}else{
				if (minval != "" & fminval != ""){
					alert("Please enter only one mineral name.");
				}else{
					var datamin;
					var formulatxt = "";
					var dataminerals_index = 0;
					var datafminerals_index = 0;
					for (i=0;i<dataminerals.length;i++){
						if (dataminerals[i].name == minval){
							dataminerals_index = i;
						}
					}
					
					for (i=0;i<datafminerals.length;i++){
						if (datafminerals[i].fname == fminval){
							datafminerals_index = i;
							break;
						}
					}
					if (minval != ""){
						datamin = dataminerals[dataminerals_index];
					}
					
					if (fminval != ""){
						datamin = datafminerals[datafminerals_index];
					}
					$(".newmineral").toggle();
					$(".mineralsTitle").css("display", "");  
					$(".nomin").hide();
						
					$content = "<TR>";
					$content = $content + "<TD width='5%'>";
					$content = $content + '<label class="lbl_idmineral'+lastminindex+'">'+datamin.id+'</label>';
					$content = $content + "</TD>";
					$content = $content + "<TD width='10%'>";
					if (minval != ""){
						$content = $content + datamin.name;
					}
					
					if ((datamin.fname != "") & (datamin.fname != datamin.name)){
						$content = $content + ", " + datamin.fname + " (Fl.)";
					}
					$content = $content + "</TD>";
					$content = $content + "<TD width='10%'>";
					$content = $content + '<input type="integer" class="inp_mineralgrade'+lastminindex+'" value="'+$(".inp_addnewmineralgrade").val()+'">';
					$content = $content + "</TD>";
					$content = $content + "<TD width='10%'>";
					$content = $content + datamin.rank;
					$content = $content + "</TD>";
					$content = $content + "<TD width='50%'>";
					if (datamin.formula != null){
						formulatxt = datamin.formula.replace(/\'/g, ""); 
					}
					$content = $content + displayFormula(formulatxt);
					$content = $content + "</TD>";
					$content = $content + "<TD width='15%'>";
					if (minval != ""){
						$content = $content + datamin.parent;
					}
					
					if (datamin.fparent != ""){
						$content = $content + ", " + datamin.fparent + " (Fl.)";
					}
					
					$content = $content + "</TD>";
					$content = $content + "</TR>";
					
					$(".mineralsTitle").append($content);
					
					$newgradesvals = $newgradesvals + "," +datamin.id +"-"+$(".inp_addnewmineralgrade").val()+"-I";
					$(".newgrades").val($newgradesvals.substring(1,$newgradesvals.length));
					lastminindex++;
					change();
				}
			}
		}
	});
	
	$('#but_showaddcontribution').click(function(e){
		$(".newcontribution").toggle();
		$(".nocontrib").hide();
		$(".showid").hide();
	});
	
	var $contributions = [];
	for(l=0;l<=5;l++){
		if (typeof $contributions[l] === 'undefined') {
		   $contributions[l] = [];
		}
		for(ll=0;ll<=15;ll++){
			if (typeof $contributions[l][ll] === 'undefined') {
				$contributions[l][ll] = [];
			}
		};
	};
	
	$nbraddcontrib = 0;
	$('#but_addcontribution').click(function(e){
		if ($(".inp_addnewcontributionID option:selected").val() != ""){
			$ids=$(".inp_addnewcontributionID option:selected").val().split("--");
			$id = $ids[0];
			var i = 0;
			$.ajax({
				url: "{{ path('app_AlldataContributions_list')  }}",  
				data : {code:$id}, 
				type: "GET",
				dataType: "JSON",
				success: function (donnees) {
					i = 0;
					$.each(donnees, function (key, donnee) {
						$idcontributor = "";
						$datetype = "";
						$date = "";
						$year = "";
						$institut = "";
						$people = "";
						$contributorrole = "";
						$contributororder = "";
						$peoplefonction = "";
						$peopletitre = "";
						$peoplestatut = "";
						if (donnee.idcontributor != null){
							$idcontributor = donnee.idcontributor;
						}
						if (donnee.datetype != null){
							$datetype = donnee.datetype;
						}
						if (donnee.date != null){
							$date = donnee.date;
						}
						if (donnee.year != null){
							$year = donnee.year;
						}
						if (donnee.people != null){
							$people = donnee.people;
						}
						if (donnee.contributorrole != null){
							$contributorrole = donnee.contributorrole;
						}
						if (donnee.contributororder != null){
							$contributororder = "("+donnee.contributororder+")";
						}
						if (donnee.peoplefonction != null){
							$peoplefonction = donnee.peoplefonction;
						}
						if (donnee.peopletitre != null){
							$peopletitre = donnee.peopletitre;
						}
						if (donnee.peoplestatut != null){
							$peoplestatut = donnee.peoplestatut;
						}
						if (donnee.institut != null){
							$institut = donnee.institut;
						}

						$contributions[$nbraddcontrib][i]['idcontribution']=donnee.idcontribution;
						$contributions[$nbraddcontrib][i]['datetype']=$datetype;
						$contributions[$nbraddcontrib][i]['date']=$date;
						$contributions[$nbraddcontrib][i]['year']=$year;
						$contributions[$nbraddcontrib][i]['idcontributor']=$idcontributor;
						$contributions[$nbraddcontrib][i]['people']=$people;
						$contributions[$nbraddcontrib][i]['contributorrole']=$contributorrole;
						$contributions[$nbraddcontrib][i]['contributororder']=$contributororder;
						$contributions[$nbraddcontrib][i]['peoplefonction']=$peoplefonction;
						$contributions[$nbraddcontrib][i]['peopletitre']=$peopletitre;
						$contributions[$nbraddcontrib][i]['peoplestatut']=$peoplestatut;
						$contributions[$nbraddcontrib][i]['institut']=$institut;
						i++;
					});
					setTimeout(addline($contributions,i),250);
					$newcontributionsvals = "";
					for (i=0;i<lastcontributionindex;i++){
						$newcontributionsvals = $newcontributionsvals + "," + $contributions[i][0]['idcontribution'] +"-"+$contributions[i][0]['idcontribution']+"-I";
						$(".newcontributions").val($newcontributionsvals.substring(1,$newcontributionsvals.length));
					};
		
					$nbraddcontrib++;
				},
				error:function(XMLHttpRequest) { 
					$(".addnewcontributionID").html("No contribution found");
				}       
			});				
			
			function addline(cont,i) {
				lastContribindex = i;
				$contentcontrib = "";
				$(".newcontribution").toggle();
				$(".showyear").hide();
				$(".contributionsTitle").css("display", ""); 
				idontribm1 = 0;
				for(l=0;l<i;l++){
					$contentcontrib = $contentcontrib + '<TR id="contributions'+ $nbraddcontrib+'_'+l +'">';
					
					if (cont[$nbraddcontrib][l].idcontribution != idontribm1){
						$contentcontrib = $contentcontrib + '<TH>';
						$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].idcontribution;
						$contentcontrib = $contentcontrib + '</TH>';
						$contentcontrib = $contentcontrib + '<TH>';
						$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].datetype;
						$contentcontrib = $contentcontrib + '</TH>';
						$contentcontrib = $contentcontrib + '<TH>';
						$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].date;
						$contentcontrib = $contentcontrib + '</TH>';
						$contentcontrib = $contentcontrib + '<TH>';
						$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].year;
						$contentcontrib = $contentcontrib + '</TH>';
						lastcontributionindex++;
					}else{
						$contentcontrib = $contentcontrib + '<TD colspan="4" ></TD>';
					}
					
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].idcontributor;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].people;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].contributorrole+cont[$nbraddcontrib][l].contributororder;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].peoplefonction;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].peopletitre;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].peoplestatut;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '<TD>';
					$contentcontrib = $contentcontrib + cont[$nbraddcontrib][l].institut;
					$contentcontrib = $contentcontrib + '</TD>';
					$contentcontrib = $contentcontrib + '</TR>';
					
					idontribm1 = cont[$nbraddcontrib][l].idcontribution;
				};
				$(".contributionsTitle").append($contentcontrib);
				/*$(".inp_addnewcontributorName").val("");
				$(".inp_addnewcontributorRole").val("");
				$(".inp_addnewcontributorOrder").val("");
				completeOtherPeopleData(lastContribindex);
				changecontrib();
				if ($newcontributorsvals.indexOf($('.inp_addnewcontributorID'+lastContribindex).val() +"-U") < 0){
					$newcontributorsvals = $newcontributorsvals + "," + lastContribindex +"-" + $('.inp_addnewcontributorID'+lastContribindex).val() +"-U"; 
					$(".newcontributors").val($newcontributorsvals.substring(1,$newcontributorsvals.length));
				}*/
			}
			
			//fill_lastContributorid();
		}else{
			alert("Please enter a contribution ID before adding contributors !");
		}
	});
	
	function deleteSamContribution(idcontr) {
		var r = confirm("Are you sure to delete that contribution?");
		if (r == true) {
			var idx = idcontr.indexOf("-"); 
			var i = idcontr.substring(0,idx);
			var id = idcontr.substring(idx+1);

			$newcontributionsvals = $newcontributionsvals + "," + i +"-" + id +"-D"; 
			$(".newcontributions").val($newcontributionsvals.substring(1,$newcontributionsvals.length));
			
			for(k=0;k<={{k}};k++){
				$fieldname = "#contributions"+i+"_"+k;
				$($fieldname).html("<TD></TD colspan=9>"); 
			}
		} 
	}
	
	function saveclic(){
		testlength =  parseFloat($(".lati_deg_0").val()) +  parseFloat($(".latiDD_0").val()) +  parseFloat($(".latiUTM_0").val());
		if(testlength != 0 & !isNaN(testlength)){
			GenWKT_and_draw(1);
		}
		if ($(".longiDD_0").val() == ""){
			$("#appbundle_dloccenter_coordlong").val(0);
		}else{
			$("#appbundle_dloccenter_coordlong").val($(".longiDD_0").val());
		}
		if ($(".latiDD_0").val() == ""){
			$("#appbundle_dloccenter_coordlat").val(0);
		}else{
			$("#appbundle_dloccenter_coordlat").val($(".latiDD_0").val());
		}
		$("#appbundle_dloccenter_wkt").val($(".inp_WKT").html());
		//$("#appbundle_dloccenter_altitude").val($(".inp_altitude").val());
	}
	
	function valtransform(val,dec){
		if (val > -1){
			return parseFloat(val).toFixed(dec);
		}else{
			return 0;
		}
	}
	
	//Map code----------------------------------------------------
	var map;
	var showDMSCoordinates;
	var coordViewMode=true;
	var controls;
	//var valueType = 'none';
	var valueType = 'Point';
	var vectorlayer;
	var mousePositionControl;
	var scaleLineControl;
	var styleLine;
	var source;
	var vectorLoaded =false;
	var draw;
	var iLayer=0;
	var main_layer_global;
	const typeSelect =  document.getElementById('type');
	var autoDraw=false;
	var vectorlayer_local;

	var styleWKT= new ol.style.Style({
		  fill: new ol.style.Fill({
			color: 'rgba(255, 255, 255, 0.2)'
		  }),
		  stroke: new ol.style.Stroke({
			color: '#ffcc33',
			width: 4
		  }),
		  image: new ol.style.Circle({
			radius: 7,
			fill: new ol.style.Fill({
			  color: '#ffcc33'
			})
		  })
		});

	function removeDarwinLayer(p_max){			
		if(vectorLoaded){
			map.getLayers().forEach(function(layer) {	
				if (typeof layer !== 'undefined') {						
					if(layer.get("name")!="background"&&parseInt(layer.get("name")) <= p_max ){						
						map.removeLayer(layer);
					}
				}
			});
		}		
	}
	
	$("#wkt_to_map").click(function(){
		GenWKT_and_draw(1);
	});
	
	function GenWKT_and_draw(origin){
		if(origin == 1){ //to prevent generation of wkt at form loading
			generate_wkt_vector();
		}

		var wkt_str=$(".inp_WKT").html(); //$("#gtu_wkt_str").val();

		if(wkt_str.length > 0 && p_data_epsg.length > 0){
			draw_wkt(wkt_str, p_data_epsg);
		}
	}
	
	function draw_wkt(p_featureWKT, p_epsg){
		var format = new ol.format.WKT();
		var featureWKT = format.readFeature(p_featureWKT, {
				dataProjection: p_epsg,
				featureProjection: p_proj_epsg
			});
			
		p_data_epsg=p_epsg;
		
		addDarwinLayer(featureWKT,"from values");	
	}
	
	function addDarwinLayer(feature,origininput){
		 var tmp_geom;

		 valueType = feature.getGeometry().getType();

		 switch (valueType)	{
			case "Point":
				tmp_geom=new ol.geom.Point(feature.getGeometry().getCoordinates());
				generic_feature = new ol.Feature({geometry: tmp_geom});
				break;
			case "LineString":
				tmp_geom=new ol.geom.LineString(feature.getGeometry().getCoordinates());
				generic_feature = new ol.Feature({geometry: tmp_geom});
				break;
			case "Polygon": 
			   tmp_geom=new ol.geom.Polygon(feature.getGeometry().getCoordinates());
			   generic_feature = new ol.Feature({geometry: tmp_geom});
			   break;
			case "Circle": 
			   tmp_geom=new ol.geom.Circle(feature.getGeometry().getCoordinates());
			   generic_feature = new ol.Feature({geometry: tmp_geom});
			   break;
			 default :
				generic_feature=feature;
				tmp_geom=generic_feature.getGeometry();				
				break;
		}
		var tmpSource=new ol.source.Vector();
		tmpSource.addFeature(generic_feature);
		iLayer++;
		vectorlayer_local = new ol.layer.Vector({
					name: iLayer,
					source: tmpSource,
					style: styleWKT	});
		map.addLayer(vectorlayer_local);
		//removeDarwinLayer(iLayer);
		
		if (origininput == "from drawing"){
			var format = new ol.format.WKT();
			tmp_geom_data_epsg= tmp_geom.clone();
			tmp_geom_data_epsg.transform("EPSG:3857", p_data_epsg);
			wktfeaturegeom = format.writeGeometry(tmp_geom_data_epsg);
			$(".inp_WKT").html(wktfeaturegeom);
			fill_points_lines_from_wkt(1);
		}
	
		map.getView().fit(vectorlayer_local.getSource().getExtent());
		map.getView().setZoom(7);
		vectorLoaded=true;		
	}
	
	function addInteraction() {
		if (valueType !== 'none') {
			removeDarwinLayer();
			draw=null;
			if (valueType == "polygon2"){
				typegeom = "polygon";
			}else{
				typegeom = valueType;
			}
			draw = new ol.interaction.Draw({
				source: new ol.source.Vector(),
				type: typegeom
			});
			map.addInteraction(draw);
			draw.on('drawend', function (event) {
				addDarwinLayer(event.feature,"from drawing");
			});
		}
	}
	
	typeSelect.onchange = function() {
		$('#list_of_coordDMS').html("");
		$('#list_of_coordDD').html("");
		$('#list_of_coordUTM').html("");
		//create new fields to enter coordinates
		valueType = typeSelect.value;

		switch (valueType){
			case "Point": 
				$('.points_for_geometry').html('');
			   break;
			case "LineString": 
				$('.points_for_geometry').html('<form class="form_points">of <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points</form>');
			   break;
			case "Polygon": 
				$('.points_for_geometry').html('<form class="form_points">of <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points </form>');
			   break;
			case "Circle": 
				$('.points_for_geometry').html('');
				break;
			default:
				$('.points_for_geometry').html('');
		}
		draw_points_input_fields(1);
		$('.nbrpoints').change(function() {
			draw_points_input_fields($('.nbrpoints').val());
		});
		
		$('.latiDD_0').val(0);
		$('.longiDD_0').val(0);
		$('.lati_deg_0').val(0);
		$('.lati_min_0').val(0);
		$('.lati_sec_0').val(0);
		$( '.latns_0'+' option:selected' ).text("S");
		$('.longi_deg_0').val(0);
		$('.longi_min_0').val(0);
		$('.longi_sec_0').val(0);
		$( '.longew_0'+' option:selected' ).text("E");
		$('.longiUTM_0').val(0);
		$('.latiUTM_0').val(0);
		$('.zoneUTM_0').val(0);
		$('.dirUTM_0').val("S");
		$(".inp_WKT").html("");
		
		//IMPORTANT DO NOT MOVE THIS OR LAYERS ARE NOT DELETED
		map.removeInteraction(draw);
		addInteraction();
	};	  
	
	function draw_points_input_fields(nbrpointsin){
		if (nbrpointsin != ""){
			//List of fields for DMS-------------
			var htmlcontent = '<table>';
			for (i=1;i<nbrpointsin;i++){
				htmlcontent = htmlcontent + '<tr>';
				htmlcontent = htmlcontent + '<td><input class="lati_deg_'+i+' vshortlength" type="text" maxlength = "3" value=0></td>';
				htmlcontent = htmlcontent + '<td>deg.</td>';
				htmlcontent = htmlcontent + '<td><input class="lati_min_'+i+' vshortlength" type="text" maxlength="2" value=0></td>';
				htmlcontent = htmlcontent + '<td>min.</td>';
				htmlcontent = htmlcontent + '<td><input class="lati_sec_'+i+' vshortlength" type="text" maxlength="8" value=0></td>';
				htmlcontent = htmlcontent + '<td>sec.</td>';
				htmlcontent = htmlcontent + '<td style="border-right: 1px solid #000000;"  ><select class="latns_'+i+'">';
				htmlcontent = htmlcontent + '		<option value="S">S</option>';
				htmlcontent = htmlcontent + '		<option value="N">N</option>';
				htmlcontent = htmlcontent + '	</select></td>';
				htmlcontent = htmlcontent + '<td>&nbsp;<input class="longi_deg_'+i+' vshortlength" type="text" maxlength="2" value=0></td>';
				htmlcontent = htmlcontent + '<td>deg.</td>';
				htmlcontent = htmlcontent + '<td><input class="longi_min_'+i+' vshortlength" type="text" maxlength="2" value=0></td>';
				htmlcontent = htmlcontent + '<td>min.</td>';
				htmlcontent = htmlcontent + '<td><input class="longi_sec_'+i+' vshortlength" type="text" maxlength="8" value=0></td>';
				htmlcontent = htmlcontent + '<td>sec.</td>';
				htmlcontent = htmlcontent + '<td><select class="longew_'+i+'">';
				htmlcontent = htmlcontent + '		<option value="E">E</option>';
				htmlcontent = htmlcontent + '		<option value="W">W</option>';
				htmlcontent = htmlcontent + '	</select></td>';
				htmlcontent = htmlcontent + '</tr>';
			};

			htmlcontent = htmlcontent + '</table>';
			$('#list_of_coordDMS').html(htmlcontent);
			
			//List of fields for DD-------------
			var htmlcontent2 = '<table>';
			for (i=1;i<nbrpointsin;i++){
				htmlcontent2 = htmlcontent2 + '<tr>';
				htmlcontent2 = htmlcontent2 + '<td style="min-width:100px"></td><td style="padding-left: 10px; padding-right: 10px;"><input class="latiDD_'+i+' vshortlength" type="text" maxlength="12" value=0></td>';
				htmlcontent2 = htmlcontent2 + '<td style="padding-left: 10px; padding-right: 10px;">&nbsp;<input class="longiDD_'+i+' vshortlength" type="text" maxlength="12" value=0></td>';
				htmlcontent2 = htmlcontent2 + '</tr>';
			};

			htmlcontent2 = htmlcontent2 + '</table>';
			$('#list_of_coordDD').html(htmlcontent2);
			
			//List of fields for UTM-------------
			var htmlcontent3 = '<table>';
			for (i=1;i<nbrpointsin;i++){
				htmlcontent3 = htmlcontent3 + '<tr>';
				htmlcontent3 = htmlcontent3 + '<td>';
				htmlcontent3 = htmlcontent3 + '&nbsp;<input class="longiUTM_'+i+' vshortlength" type="text" maxlength="12" value=0>';
				htmlcontent3 = htmlcontent3 + '</td>';
				htmlcontent3 = htmlcontent3 + '<td>';
				htmlcontent3 = htmlcontent3 + '<input class="latiUTM_'+i+' vshortlength" type="text" maxlength="12" value=0>';
				htmlcontent3 = htmlcontent3 + '</td>';
				htmlcontent3 = htmlcontent3 + '<td>';
				htmlcontent3 = htmlcontent3 + '<input class="zoneUTM_'+i+'" type="integer" size="2" min="1" max="60">';
				htmlcontent3 = htmlcontent3 + '<select class="dirUTM_'+i+'">';
				htmlcontent3 = htmlcontent3 + '	<option value="S">S</option>';
				htmlcontent3 = htmlcontent3 + '	<option value="N">N</option>';
				htmlcontent3 = htmlcontent3 + '</select>';
				htmlcontent3 = htmlcontent3 + '</td>';
				htmlcontent3 = htmlcontent3 + '</tr>';
			};

			htmlcontent3 = htmlcontent3 + '</table>';
			$('#list_of_coordUTM').html(htmlcontent3);
		}
	}
	
	function Fill_original_values(){
		var originalcoords = "";
		if (source_selected == "DMS"){
			if (valueType != 'polygon2') {
				for (i=0;i<nbrpoints;i++){
					originalcoords = originalcoords 
						+ parseFloat($('.lati_deg_'+i).val()) +"°"+parseFloat($('.lati_min_'+i).val())+"'"+parseFloat($('.lati_sec_'+i).val())+"\""+$( '.latns_'+i+' option:selected' ).text()+" "
						+ parseFloat($('.longi_deg_'+i).val()) +"°"+parseFloat($('.longi_min_'+i).val())+"'"+parseFloat($('.longi_sec_'+i).val())+"\""+$( '.longew_'+i+' option:selected' ).text()
						+",";
				}
			}else{
				originalcoords = originalcoords 
					+ parseFloat($('.lati_deg_0').val()) +"°"+parseFloat($('.lati_min_0').val())+"'"+parseFloat($('.lati_sec_0').val())+"\""+$( '.latns_0'+' option:selected' ).text()+" "
					+ parseFloat($('.longi_deg_0').val()) +"°"+parseFloat($('.longi_min_0').val())+"'"+parseFloat($('.longi_sec_0').val())+"\""+$( '.longew_0'+' option:selected' ).text()+","
					
					+ parseFloat($('.lati_deg_0').val()) +"°"+parseFloat($('.lati_min_0').val())+"'"+parseFloat($('.lati_sec_0').val())+"\""+$( '.latns_0'+' option:selected' ).text()+" "
					+ parseFloat($('.longi_deg_1').val()) +"°"+parseFloat($('.longi_min_1').val())+"'"+parseFloat($('.longi_sec_1').val())+"\""+$( '.longew_1'+' option:selected' ).text()+","
					
					+ parseFloat($('.lati_deg_1').val()) +"°"+parseFloat($('.lati_min_1').val())+"'"+parseFloat($('.lati_sec_1').val())+"\""+$( '.latns_1'+' option:selected' ).text()+" "
					+ parseFloat($('.longi_deg_1').val()) +"°"+parseFloat($('.longi_min_1').val())+"'"+parseFloat($('.longi_sec_1').val())+"\""+$( '.longew_1'+' option:selected' ).text()+","
					
					+ parseFloat($('.lati_deg_1').val()) +"°"+parseFloat($('.lati_min_1').val())+"'"+parseFloat($('.lati_sec_1').val())+"\""+$( '.latns_1'+' option:selected' ).text()+" "
					+ parseFloat($('.longi_deg_0').val()) +"°"+parseFloat($('.longi_min_0').val())+"'"+parseFloat($('.longi_sec_0').val())+"\""+$( '.longew_0'+' option:selected' ).text()+",";
			}
		}
		if (source_selected == "DD"){
			if (valueType != 'polygon2') {
				for (i=0;i<nbrpoints;i++){
					originalcoords  = originalcoords + $('.longiDD_'+i).val() + " " + $('.latiDD_'+i).val()+ ",";
				}
			}else{
				latDeci0= $('.latiDD_0').val();
				longDeci0= $('.longiDD_0').val();
				latDeci2= $('.latiDD_1').val();
				longDeci2= $('.longiDD_1').val();
				latDeci1= latDeci0;
				longDeci1= longDeci2;
				latDeci3= latDeci2;
				longDeci3= longDeci0;
				originalcoords  = originalcoords + longDeci0 + " " + latDeci0 + ","+ longDeci1 + " " + latDeci1 + ","+ longDeci2 + " " + latDeci2 + ","+ longDeci3 + " " + latDeci3 + ",";
			}
		}
		if (source_selected == "UTM"){
			if (valueType != 'polygon2') {
				for (i=0;i<nbrpoints;i++){
					originalcoords  = originalcoords + $('.longiUTM_'+i).val() + " " + $('.latiUTM_'+i).val()+ " " +$('.zoneUTM_'+i).val()+ " " +$('.dirUTM_'+i).val()+ ",";
				}
			}else{
				originalcoords  = originalcoords + 	$('.longiUTM_0').val() + " " + $('.latiUTM_0').val()+ " " +$('.zoneUTM_0').val()+ " " +$('.dirUTM_0').val() + ","+ 
													$('.longiUTM_1').val() + " " + $('.latiUTM_0').val()+ " " +$('.zoneUTM_1').val()+ " " +$('.dirUTM_0').val() + ","+ 
													$('.longiUTM_1').val() + " " + $('.latiUTM_1').val()+ " " +$('.zoneUTM_1').val()+ " " +$('.dirUTM_1').val() + ","+ 
													$('.longiUTM_0').val() + " " + $('.latiUTM_1').val()+ " " +$('.zoneUTM_0').val()+ " " +$('.dirUTM_1').val() + ",";
			}
		}

		$('.origcoord').val(originalcoords.substring(0, originalcoords.length-1));
	}
	
	function generate_wkt_vector(){
		var errorval = false;
		var latDeci0= 0;
		var longDeci0= 0;
		if (valueType == 'none' | valueType == 'Point') {
			typegeom = "Point";
			nbrpoints = 1;
		}else{
			if (valueType == 'polygon2') {
				typegeom = "Polygon";
				nbrpoints = $('.nbrpoints').val();
			}else{
				typegeom = valueType;
				
				nbrpoints = $('.nbrpoints').val();
			}
		}

		if (source_selected == "DMS"){
			//$('.inp_search_epsg').val(4326);
			//$('.epsgRO').html(4326);
			for (i=0;i<nbrpoints;i++){
				if(((!$.isNumeric($('.lati_deg_'+i).val()) | !$.isNumeric($('.lati_min_'+i).val()) | !$.isNumeric($('.lati_sec_'+i).val()) | 
				   !$.isNumeric($('.longi_deg_'+i).val()) | !$.isNumeric($('.longi_min_'+i).val()) | !$.isNumeric($('.longi_sec_'+i).val()) ) &
				   ( $('.lati_deg_'+i).val().length + $('.lati_min_'+i).val().length + $('.lati_sec_'+i).val().length + 
					 $('.longi_deg_'+i).val().length + $('.longi_min_'+i).val().length + $('.longi_sec_'+i).val().length != 0
				   ))|
					($('.lati_deg_'+i).val().length + $('.lati_min_'+i).val().length + $('.lati_sec_'+i).val().length + 
					 $('.longi_deg_'+i).val().length + $('.longi_min_'+i).val().length + $('.longi_sec_'+i).val().length == 0 & nbrpoints == 1)
				   |
					$('.lati_deg_'+i).val() < 0 | $('.lati_deg_'+i).val() > 90 | $('.longi_deg_'+i).val() < 0 | $('.longi_deg_'+i).val() > 180 |
					$('.lati_min_'+i).val() < 0 | $('.lati_min_'+i).val() > 59 | $('.longi_min_'+i).val() < 0 | $('.longi_min_'+i).val() > 59 |
					$('.lati_sec_'+i).val() < 0 | $('.lati_sec_'+i).val() > 59 | $('.longi_sec_'+i).val() < 0 | $('.longi_sec_'+i).val() > 59 
				){
					errorval = true;
				}
			}
			
			if(errorval == true){
				alert('There are errors in the DMS coordinates entered!');
			}else{
				//////calculate wkt

				var latSign0 ;
				var longSign0 ;
				var latSign1 ;
				var longSign1 ;
				
				wktfromdata = typegeom.toUpperCase() +"(";
				if (typegeom.toUpperCase() == "POLYGON"){
					wktfromdata = wktfromdata +"(";
				}
				if (valueType != 'polygon2') {
					latcalc = 0
					for (i=0;i<nbrpoints;i++){
						var latSign;
						var longSign;
						var latDeci = 0;
						var longDeci = 0;

						if($( '.latns_'+i+' option:selected' ).text() == "S"){
							latSign = -1;
						}else{
							latSign = 1;
						}
						if($( '.longew_'+i+' option:selected' ).text() == "W"){
							longSign = -1;
						}else{
							longSign = 1;
						}
						if(i==0){
							latSign0 = latSign;
							longSign0 = longSign;
						}
						
						latDeci= latSign * (parseFloat($('.lati_deg_'+i).val()) + ( parseFloat($('.lati_min_'+i).val())/60) + ( parseFloat($('.lati_sec_'+i).val())/3600));
						longDeci= longSign  * (parseFloat($('.longi_deg_'+i).val()) + ( parseFloat($('.longi_min_'+i).val())/60) + ( parseFloat($('.longi_sec_'+i).val())/3600));
						latDeci0= latSign0 * (parseFloat($('.lati_deg_0').val()) + ( parseFloat($('.lati_min_0').val())/60) + ( parseFloat($('.lati_sec_0').val())/3600));
						longDeci0= longSign0  * (parseFloat($('.longi_deg_0').val()) + ( parseFloat($('.longi_min_0').val())/60) + ( parseFloat($('.longi_sec_0').val())/3600));
						wktfromdata = wktfromdata +longDeci + " "  +  latDeci + ",";
					}
				}else{
					if($( '.latns_0'+' option:selected' ).text() == "S"){
						latSign0 = -1;
					}else{
						latSign0 = 1;
					}
					if($( '.longew_0'+' option:selected' ).text() == "W"){
						longSign0 = -1;
					}else{
						longSign0 = 1;
					}
					if($( '.latns_1'+' option:selected' ).text() == "S"){
						latSign1 = -1;
					}else{
						latSign1 = 1;
					}
					if($( '.longew_1'+' option:selected' ).text() == "W"){
						longSign1 = -1;
					}else{
						longSign1 = 1;
					}

					latDeci0=  latSign0 * (parseFloat($('.lati_deg_0').val()) + ( parseFloat($('.lati_min_0').val())/60) + ( parseFloat($('.lati_sec_0').val())/3600));
					longDeci0= longSign0  * (parseFloat($('.longi_deg_0').val()) + ( parseFloat($('.longi_min_0').val())/60) + ( parseFloat($('.longi_sec_0').val())/3600));
					
					latDeci2= latSign1 * (parseFloat($('.lati_deg_1').val()) + ( parseFloat($('.lati_min_1').val())/60) + ( parseFloat($('.lati_sec_1').val())/3600));
					longDeci2= longSign1  * (parseFloat($('.longi_deg_1').val()) + ( parseFloat($('.longi_min_1').val())/60) + ( parseFloat($('.longi_sec_1').val())/3600));
					latDeci1= latDeci0;
					longDeci1= longDeci2;
					latDeci3= latDeci2;
					longDeci3= longDeci0;
					wktfromdata = wktfromdata + longDeci0 + " " + latDeci0 + ","+ longDeci1 + " " + latDeci1 + ","+ longDeci2 + " " + latDeci2 + ","+ longDeci3 + " " + latDeci3 + ",";
				}

				$(".convertDMS2DDLat").val(latDeci0);
				$(".convertDMS2DDLong").val(longDeci0);
				$(".DMSLatSign").val(latSign0);
				$(".DMSLongSign").val(longSign0);
				//$(".geom_type").val(typegeom);
				
				if(typegeom == "Polygon"){
					wktfromdata = wktfromdata + longDeci0 + " " + latDeci0 + "))";
				}
				
				wktfromdata = wktfromdata.substring(0, wktfromdata.length-1) + ")";
				$(".wkt").val(wktfromdata);
			}
		}
		if (source_selected == "DD"){
			//$('.inp_search_epsg').val(4326);
		//	$('.epsgRO').html(4326);
			for (i=0;i<nbrpoints;i++){
				if(((!$.isNumeric($('.latiDD_'+i).val()) | !$.isNumeric($('.longiDD_'+i).val()) ) &
					( $('.latiDD_'+i).val().length + $('.longiDD_'+i).val().length != 0 )
				   )|
				   ($('.latiDD_'+i).val().length + $('.longiDD_'+i).val().length == 0 & nbrpoints == 1)
				   |
					$('.latiDD_'+i).val() < -90 | $('.latiDD_'+i).val() > 90 | $('.longiDD_'+i).val() < -180 | $('.longiDD_'+i).val() > 180 
				  ){
					errorval = true;
				}
			}
			if(errorval == true){
				alert('There are errors in the decimal coordinates entered!');
			}else{
				//////calculate wkt
				wktfromdata = typegeom.toUpperCase() +"(";
				
				if (typegeom.toUpperCase() == "POLYGON"){
					wktfromdata = wktfromdata +"(";
				}
				if (valueType != 'polygon2') {
					for (i=0;i<nbrpoints;i++){
						var latDeci = 0;
						var longDeci = 0;

						latDeci= $('.latiDD_'+i).val();
						longDeci= $('.longiDD_'+i).val();
						wktfromdata = wktfromdata + longDeci + " " + latDeci + ",";
					}
					$(".convertDMS2DDLat").val($('.latiDD_0').val());
					$(".convertDMS2DDLong").val($('.longiDD_0').val());
				}else{
					latDeci0= $('.latiDD_0').val();
					longDeci0= $('.longiDD_0').val();
					latDeci2= $('.latiDD_1').val();
					longDeci2= $('.longiDD_1').val();
					latDeci1= latDeci0;
					longDeci1= longDeci2;
					latDeci3= latDeci2;
					longDeci3= longDeci0;
					wktfromdata = wktfromdata + longDeci0 + " " + latDeci0 + ","+ longDeci1 + " " + latDeci1 + ","+ longDeci2 + " " + latDeci2 + ","+ longDeci3 + " " + latDeci3 + ",";
					
					$(".convertDMS2DDLat").val(latDeci0);
					$(".convertDMS2DDLong").val(longDeci0);
				}

			//	$(".geom_type").val(typegeom);
				if(typegeom == "Polygon"){
					wktfromdata = wktfromdata + $('.longiDD_0').val() + " " + $('.latiDD_0').val() + "))";
				}
			
				wktfromdata = wktfromdata.substring(0, wktfromdata.length-1) + ")";
				$(".inp_WKT").html(wktfromdata);
			}
		}
		if (source_selected == "UTM"){
			var dir = 0;
			if($('.dirUTM_0').val() == "N"){
				dir = 326;
			}else{
				dir = 327;
			}
			$('.inp_search_epsg').val(dir+$('.zoneUTM_0').val());
			$('.epsgRO').html(dir+$('.zoneUTM_0').val());

			for (i=0;i<nbrpoints;i++){
				if(((!$.isNumeric($('.latiUTM_'+i).val()) | !$.isNumeric($('.longiUTM_'+i).val()) ) &
					( $('.latiUTM_'+i).val().length + $('.longiUTM_'+i).val().length != 0 )
				   )|
				   ($('.latiUTM_'+i).val().length + $('.longiUTM_'+i).val().length == 0 & nbrpoints == 1)
				   |
					$('.latiUTM_'+i).val() < 0 | $('.latiUTM_'+i).val() > 10000000 | $('.longiUTM_'+i).val() < 0 | $('.longiUTM_'+i).val() > 2000000
				  ){
					errorval = true;
				}
			}
			if(errorval == true){
				alert('There are errors in the UTM coordinates entered!');
			}else{
				//////calculate wkt
				var latUTM = 0;
				var longUTM = 0;
				var coordUTM;
				
				wktfromdata = typegeom.toUpperCase() +"(";
				if (typegeom.toUpperCase() == "POLYGON"){
					wktfromdata = wktfromdata +"(";
				}
				if (valueType != 'polygon2') {
					for (i=0;i<nbrpoints;i++){
						coordUTM= Utm2Wgs($('.longiUTM_'+i).val(),$('.latiUTM_'+i).val(),$('.zoneUTM_'+i).val(),$('.dirUTM_'+i).val());
						latUTM = coordUTM[1].toFixed(4);
						longUTM = coordUTM[0].toFixed(4);

						wktfromdata = wktfromdata + longUTM + " " + latUTM + ",";
						if (i==0){
							$(".convertDMS2DDLat").val(latUTM);
							$(".convertDMS2DDLong").val(longUTM);
						}
					}
				}else{
					coordUTM0= Utm2Wgs($('.longiUTM_0').val(),$('.latiUTM_0').val(),$('.zoneUTM_0').val(),$('.dirUTM_0').val());
					latUTM0 = coordUTM0[1].toFixed(4);
					longUTM0 = coordUTM0[0].toFixed(4);
						
					coordUTM2= Utm2Wgs($('.longiUTM_1').val(),$('.latiUTM_1').val(),$('.zoneUTM_1').val(),$('.dirUTM_1').val());
					latUTM2 = coordUTM2[1].toFixed(4);
					longUTM2 = coordUTM2[0].toFixed(4);
					
					latUTM1= latUTM0;
					longUTM1= longUTM2;
					latUTM3= latUTM2;
					longUTM3= longUTM0;
					wktfromdata = wktfromdata + longUTM0 + " " + latUTM0 + ","+ longUTM1 + " " + latUTM1 + ","+ longUTM2 + " " + latUTM2 + ","+ longUTM3 + " " + latUTM3 + ",";
					
					$(".convertDMS2DDLat").val(latUTM0);
					$(".convertDMS2DDLong").val(longUTM0);
				}
				//$(".geom_type").val(typegeom);
				if(typegeom == "Polygon"){
					wktfromdata = wktfromdata + $('.convertDMS2DDLong').val() + " " + $('.convertDMS2DDLat').val() + "))";
				}
			
				wktfromdata = wktfromdata.substring(0, wktfromdata.length-1) + ")";
				
				$(".wkt").val(wktfromdata);
			}
		}
	};
	
	function Utm2Wgs( X,Y,zone,sn) {
		if (sn=='S')
		{
			Y = Y - 10000000;
		}
		X = X - 500000;
		var sa = 6378137.000000;
		var sb = 6356752.314245;

	   var e = Math.pow( Math.pow(sa , 2) - Math.pow(sb , 2) , 0.5 ) / sa;
	   var e2 = Math.pow( Math.pow( sa , 2 ) - Math.pow( sb , 2 ) , 0.5 ) / sb;
	   var e2cuadrada = Math.pow(e2 , 2);
	   var c = Math.pow(sa , 2 ) / sb;

	   var S = ( ( zone * 6 ) - 183 ); 
	   var lat =  Y / ( 6366197.724 * 0.9996 );                         
	   var v =  (c * 0.9996)/ Math.pow( 1 + ( e2cuadrada * Math.pow( Math.cos(lat), 2 ))  , 0.5 ) ;
	   var a = X / v;
	   var a1 = Math.sin( 2 * lat );
	   var a2 = a1 * Math.pow( Math.cos(lat), 2);
	   var j2 = lat + ( a1 / 2 );
	   var j4 = ( ( 3 * j2 ) + a2 ) / 4;
	   var j6 = ( ( 5 * j4 ) + ( a2 * Math.pow( Math.cos(lat) , 2) ) ) / 3;
	   var alfa = ( 3 / 4 ) * e2cuadrada;
	   var beta = ( 5 / 3 ) * Math.pow(alfa , 2);
	   var gama = ( 35 / 27 ) * Math.pow(alfa , 3);
	   var Bm = 0.9996 * c * ( lat - alfa * j2 + beta * j4 - gama * j6 );
	   var b = ( Y - Bm ) / v;
	   var Epsi = ( ( e2cuadrada * Math.pow(a , 2)) / 2 ) * Math.pow( Math.cos(lat) , 2);
	   var Eps = a * ( 1 - ( Epsi / 3 ) );
	   var nab = ( b * ( 1 - Epsi ) ) + lat;
	   var senoheps = ( Math.exp(Eps) - Math.exp(-Eps) ) / 2;
	   var Delt = Math.atan(senoheps / Math.cos(nab) );
	   var TaO = Math.atan(Math.cos(Delt) * Math.tan(nab));
	   var longitude = (Delt *(180 / Math.PI ) ) + S;
	   var latitude = ( lat + ( 1 + e2cuadrada* Math.pow(Math.cos(lat), 2) - ( 3 / 2 ) * e2cuadrada * Math.sin(lat) * Math.cos(lat) * ( TaO - lat ) ) * ( TaO - lat ) ) * (180 / Math.PI);
	   var coord=[];
	   coord[0] = longitude;
	   coord[1] = latitude;
	   return coord;
	}

	function centerMap(longi, lati) {
		map.getView().fit(main_layer_global.getSource().getExtent());
		map.getView().setZoom(7);
	}
	
	function drawmap(){
		mousePositionControl= new ol.control.MousePosition({
			coordinateFormat: ol.coordinate.createStringXY(4),
			projection:p_data_epsg,
			className: "custom-mouse-position",
			target: document.getElementById("mouse-position"),
			undefinedHTML: "&nbsp;"
		});
		scaleLineControl = new ol.control.ScaleLine();

		styleLine= new ol.style.Style({
		  fill: new ol.style.Fill({
			color: 'rgba(255, 255, 255, 0.2)'
		  }),
		  stroke: new ol.style.Stroke({
			color: '#ffcc33',
			width: 4
		  }),
		  image: new ol.style.Circle({
			radius: 7,
			fill: new ol.style.Fill({
			  color: '#ffcc33'
			})
		  })
		})
		
		source = new ol.source.Vector();
		vectorlayer = new ol.layer.Vector({
			name:'first',
			source: source,
			style:styleLine
		});

		var styles = [
			'Road',
			'Aerial',
			'AerialWithLabels'
		  ];
		var layers = [];
		var i, ii;
		for (i = 0, ii = styles.length; i < ii; ++i) {
			layers.push(new ol.layer.Tile({
				visible: false,
				preload: Infinity,
				source: new ol.source.BingMaps({key: "Ai1X7hw9LHgPPF9BdnfLC2tTfhi5izHhCWJ4DCqREjqHBvDCsnBOfj3G3aCyoNwx",imagerySet: styles[i]  })
			}));
		}

		layers [styles.length] = vectorlayer;
		proj="";
		map = new ol.Map({
				target: 'map',
				layers: layers,
				view: new ol.View({
					projection:proj,
					center: ol.proj.fromLonLat([15,-4]),
					zoom: 7
				}),
				controls: ol.control.defaults({
						attributionOptions: ({collapsible: false})
				}).extend([mousePositionControl, scaleLineControl ])
		});

		var select = document.getElementById('layer-select');
		function onChange() {
			var style = select.value;
			for (var i = 0, ii = layers.length; i < ii; ++i) {
			  layers[i].setVisible(styles[i] === style);
			}
		}
		select.addEventListener('change', onChange);
		onChange();
		autoDraw=true;
	}
	
	function update_point_on_map( lati, longi, accu){
		drawmap(vectorlayer, lati, longi);
	}
	
	$("#cleanSelect").click(function(){
		if(autoDraw==true){
			map.removeLayer('first');
			removeDarwinLayer(iLayer);
		//	map.removeLayer(vectorlayer_local);
			autoDraw=false;
		}
		nbrpoints = 1;
		draw_points_input_fields(1);
		$('.nbrpoints').val(1);
		$('.latiDD_0').val(0);
		$('.longiDD_0').val(0);
		$('.lati_deg_0').val(0);
		$('.lati_min_0').val(0);
		$('.lati_sec_0').val(0);
		$( '.latns_0'+' option:selected' ).text("S");
		$('.longi_deg_0').val(0);
		$('.longi_min_0').val(0);
		$('.longi_sec_0').val(0);
		$( '.longew_0'+' option:selected' ).text("E");
		$('.longiUTM_0').val(0);
		$('.latiUTM_0').val(0);
		$('.zoneUTM_0').val(0);
		$('.dirUTM_0').val("S");
		$(".inp_WKT").html("");	
		//$( '.typegeom'+' option:selected' ).value("Point");
		$('.typegeom').val("Point");
		valueType = "Point";
	});
	
	function TransformStrTypeWithUppercase(type){
		if(type=="none"){
			return "None";
		}else if(type=="point"){
			return "Point";
		}else if(type=="linestring"){
			return "LineString";
		}else if(type=="polygon"){
			return "Polygon";
		}else if(type=="circle"){
			return "Circle";
		}else{return "";}
	}
	
	function fill_points_lines_from_wkt(origin){
		var wktval = $('.inp_WKT').html();
		var wktval2 = wktval.substring(wktval.indexOf("(")+1, wktval.length-1);
		var arraypoints = wktval2.split(","); 
		
		if(valueType == "polygon2"){
			nbrpoints = arraypoints.length-1;
			draw_points_input_fields(nbrpoints);
		}
		

	
		valueType = TransformStrTypeWithUppercase(wktval.substring(0,wktval.indexOf("(")).toLowerCase());
		$('.typegeom').val(valueType);
		$('.points_for_geometry').html('<form class="form_points"> <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points</form>');
		
		if (valueType == "Polygon"){
			nbrpointsfromwkt = arraypoints.length-1;
		}else{
			nbrpointsfromwkt = arraypoints.length;
		}

		$('.nbrpoints').val(nbrpointsfromwkt);
		draw_points_input_fields(nbrpointsfromwkt);

		if(origin != 0){		
			for (i=0;i<nbrpointsfromwkt;i++){
				var lat = arraypoints[i].substring(arraypoints[i].indexOf(" ")+1,arraypoints[i].length);
				var lng = arraypoints[i].substring(0,arraypoints[i].indexOf(" "));
				
				if(i==0){
					$(".convertDMS2DDLat").val(lat);
					$(".convertDMS2DDLong").val(lng);
				//	$(".geom_type").val(valueType);
				}
				
				if(i==0 & valueType == "Polygon"){
					lng = lng.substring(1, lng.length); 
				}
				
				//DMS---------------------
				$(".latns_"+i +" option[value='N']").attr("selected", true);
				if(lat < 0){
					$(".latns_"+i +" option[value='S']").attr("selected", true);
				}
				$(".longew_"+i +" option[value='E']").attr("selected", true);
				if(lng < 0){
					$(".longew_"+i +" option[value='W']").attr("selected", true);
				}

				$('.longi_deg_'+i).val(Math.floor(Math.abs(lng)));
				$('.lati_deg_'+i).val(Math.floor(Math.abs(lat)));
				var decimalLongitude=Math.abs(lng)-Math.floor(Math.abs(lng));
				var decimalLongitudeResultMinute=Math.floor(decimalLongitude*60);
				$('.longi_min_'+i).val(decimalLongitudeResultMinute);
				var decimalLatitude=Math.abs(lat)-Math.floor(Math.abs(lat));
				var decimalLatitudeResultMinute=Math.floor(decimalLatitude*60);
				$('.lati_min_'+i).val(decimalLatitudeResultMinute);
				var decimalsLongitudeForSeconds=Math.abs(lng)-Math.floor(Math.abs(lng))-(decimalLongitudeResultMinute/60);
				$('.longi_sec_'+i).val(decimalsLongitudeForSeconds*3600);
				var decimalsLatitudeForSeconds=Math.abs(lat)-Math.floor(Math.abs(lat))-(decimalLatitudeResultMinute/60);
				$('.lati_sec_'+i).val(decimalsLatitudeForSeconds*3600);
				
				//DD----------------------				
				$('.latiDD_'+i).val(lat);
				$('.longiDD_'+i).val(lng);
				
				//UTM---------------------
				var result = Wgs2Utm(lng,lat);
				//ZoneNumber = Math.floor((parseInt(lng) + 180)/6) + 1;

				$('.latiUTM_'+i).val(result[1]);
				$('.longiUTM_'+i).val(result[0]);
				$('.zoneUTM_'+i).val(result[2]);
				if(lat < 0){
					$(".dirUTM_"+i +" option[value='S']").attr("selected", true);
				}
				else{
					$(".dirUTM_"+i +" option[value='N']").attr("selected", true);
				}
				
			}
		}
		
		/*if(origin != 2){
			$('.origcoordRO').html($('.origcoord').val());
			$('.epsgRO').html($('.inp_search_epsg').val());
		}*/
		
		
	};
	
	function fill_points_lines_from_original_values(){
		if ($('.origcoord').val().length > 0){
			var coords = $('.origcoord').val().split(","); 
			$('.points_for_geometry').html('<form class="form_points"> <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points</form>');
			
			var nbrpointsfromorig = coords.length;
			draw_points_input_fields(nbrpointsfromorig);
			valueType = $('.inp_search_WKT').val().substring(0,$('.inp_search_WKT').val().indexOf("(")).toLowerCase();
			$('.typegeom').val(valueType);
			$('.nbrpoints').val(nbrpointsfromorig);

			for (i=0;i<nbrpointsfromorig;i++){
				singlecoord = coords[i].split(" ")
				if (source_selected == "DD"){
					//14.1294 -3.3919,    14.931 -2.931,15.7775 -3.907,    14.810833 -4.4880
					$(".longiDD_"+i).val(singlecoord[0]);
					$(".latiDD_"+i).val(singlecoord[1]);
				}
				if (source_selected == "DMS"){
					//51°4'2"N      3°4'31.0000000000008"E,    51°3'12"N 4°6'0"E,    51°3'5"N 2°8'0"E
					$(".latns_"+i +" option[value='N']").attr("selected", true);
					if(singlecoord[0].substring(singlecoord[0].length - 1,singlecoord[0].length) == "S"){
						$(".latns_"+i +" option[value='S']").attr("selected", true);
					}
					$(".longew_"+i +" option[value='E']").attr("selected", true);
					if(singlecoord[1].substring(singlecoord[1].length - 1,singlecoord[1].length) == "W"){
						$(".longew_"+i +" option[value='W']").attr("selected", true);
					}

					$('.longi_deg_'+i).val(singlecoord[1].substring(0,singlecoord[1].indexOf("°")));
					$('.lati_deg_'+i).val(singlecoord[0].substring(0,singlecoord[0].indexOf("°")));
					$('.longi_min_'+i).val(singlecoord[1].substring(singlecoord[1].indexOf("°")+1,singlecoord[1].indexOf("'")));
					$('.lati_min_'+i).val(singlecoord[0].substring(singlecoord[0].indexOf("°")+1,singlecoord[0].indexOf("'")));
					$('.longi_sec_'+i).val(singlecoord[1].substring(singlecoord[1].indexOf("'")+1,singlecoord[1].indexOf('"')));
					$('.lati_sec_'+i).val(singlecoord[0].substring(singlecoord[0].indexOf("'")+1,singlecoord[0].indexOf('"')));
				}
				if (source_selected == "UTM"){
					//110000 9520000 33 S,120000 9530000 33 S,115000 9540000 33 S
					$(".dirUTM_"+i +" option[value='N']").attr("selected", true);
					if(singlecoord[3] == "S"){
						$(".dirUTM_"+i +" option[value='S']").attr("selected", true);
					}

					$('.longiUTM_'+i).val(singlecoord[0]);
					$('.latiUTM_'+i).val(singlecoord[1]);
					$('.zoneUTM_'+i).val(singlecoord[2]);
				}
			}
		/*	$('.origcoordRO').html($('.origcoord').val());
			$('.epsgRO').html($('.inp_search_epsg').val());*/
		}
	}
		
	function Wgs2Utm( lan1,fi) {
		var a=6378137.000;
		var b=6356752.314;
		var f=(a-b)/a;
		var e2=Math.sqrt((Math.pow(a,2)-Math.pow(b,2))/Math.pow(b,2));
		var e=Math.sqrt((Math.pow(a,2)-Math.pow(b,2))/Math.pow(a,2));

		var zone;
		var lan0;
		if (lan1>0)
		{
			var zone=30+Math.ceil(lan1/6);
			lan0=Math.floor(lan1/6)*6+3;
		}
		else
		{
			var zone=30-Math.floor(Math.abs(lan1)/6);
			lan0=-Math.floor(Math.abs(lan1)/6)*6-3;
		}
		var lan=lan1-lan0;
		lan=lan*Math.PI/180;
		fi=fi*Math.PI/180;
		var N=a/Math.pow(1-Math.pow(e,2)*Math.pow(Math.sin(fi),2),0.5);
		var M=a*(1-Math.pow(e,2))/Math.pow((1-(Math.pow(e,2)*Math.pow(Math.sin(fi),2))),(3/2));
		var t=Math.tan(fi);
		var p=N/M;

		var k0=0.9996;

		var term1=Math.pow(lan,2)*p*Math.pow(Math.cos(fi),2)/2;
		var term2=Math.pow(lan,4)*Math.pow(Math.cos(fi),4)*(4*Math.pow(p,3)*(1-6*Math.pow(t,2))+Math.pow(p,2)*(1+24*Math.pow(t,2))-4*p*Math.pow(t,2))/24;
		var term3=Math.pow(lan,6)*Math.pow(Math.cos(fi),6)*(61-148*Math.pow(t,2)+16*Math.pow(t,4))/720;

		var Kutm=k0*(term1+term2+term3);

		term1=Math.pow(lan,2)*p*Math.pow(Math.cos(fi),2)*(p-Math.pow(t,2))/6;
		term2=Math.pow(lan,4)*Math.pow(Math.cos(fi),4)*(4*Math.pow(p,3)*(1-6*Math.pow(t,2))+Math.pow(p,2)*(1+8*Math.pow(t,2))-Math.pow(p,2)*Math.pow(t,2)+Math.pow(t,4))/120;
		term3=Math.pow(lan,6)*Math.pow(Math.cos(fi),6)*(61-479*Math.pow(t,2)+179*Math.pow(t,4)-Math.pow(t,6))/5040;

		var Xutm=500000+k0*lan*N*Math.cos(fi)*(1+term1+term2+term3);

		var A0=1-0.25*Math.pow(e,2)-3/64*Math.pow(e,4)-5/256*Math.pow(e,6);
		var A2=3/8*(Math.pow(e,2)+0.25*Math.pow(e,4)+15/128*Math.pow(e,6));
		var A4=15/256*(Math.pow(e,4)+0.75*Math.pow(e,6));
		var A6=35/3072*Math.pow(e,6);

		var sfi=a*(A0*fi-A2*Math.sin(2*fi)+A4*Math.sin(4*fi)-A6*Math.sin(6*fi));

		term1=Math.pow(lan,2)*N*Math.sin(fi)*Math.cos(fi)/2;
		term2=Math.pow(lan,4)*N*Math.sin(fi)*Math.pow(Math.cos(fi),3)*(4*Math.pow(p,2)+p-Math.pow(t,2))/24;
		term3=Math.pow(lan,6)*N*Math.sin(fi)*Math.pow(Math.cos(fi),5)*(8*Math.pow(p,4)*(11-24*Math.pow(t,2))-28*Math.pow(p,3)*(1-6*Math.pow(t,2))+Math.pow(p,2)*(1-32*Math.pow(t,2))-p*2*Math.pow(t,2)+Math.pow(t,4));
		var term4=Math.pow(lan,8)*N*Math.sin(fi)*Math.pow(Math.cos(fi),7)*(1385-3111*Math.pow(t,2)+543*Math.pow(t,4)-Math.pow(t,6));

		var Yutm=k0*(sfi+term1+term2+term3+term4);
		var sn='N';
		if (fi <0)
		{
			Yutm = 10000000 + Yutm;
			sn='S';
		}
		
		//Xutm.toString().concat(" ; " + Yutm.toString() + " "+zone.toString()+sn) ;
		var results = [];
		results[0] = Xutm.toString();
		results[1] = Yutm.toString();
		results[2] = zone.toString();
		results[3] = sn.toString();
		
		return results;
	}
	
	function checkCoordSourceState(){
		source_selected=$( ".inp_searchcoord_source" ).val();
		var showDMS='display: table-cell';
		var showDD='display: None';
		var showUTM='display: None';

		if(source_selected=="DD")
		{
			showDMS='display: None';
			showDD='display: table-cell';
			showUTM='display: None';
			//$('.inp_search_epsg').val(4326);
			//$('.epsgRO').html(4326);
		}
		else if(source_selected=="DMS"){
			showDMS='display: table-cell';
			showDD='display: None';
			showUTM='display: None';
		//	$('.inp_search_epsg').val(4326);
			//$('.epsgRO').html(4326);
		}
		else if(source_selected=="UTM"){
			showDMS='display: None';
			showDD='display: None';
			showUTM='display: table-cell';
			if($('.zoneUTM_0').val() != 0){
				var dir = 0;
				if($('.dirUTM_0').val() == "N"){
					dir = 326;
				}else{
					dir = 327;
				}
		//		$('.inp_search_epsg').val(dir+$('.zoneUTM_0').val());
				$('.epsgRO').html(dir+$('.zoneUTM_0').val());
			}else{
			//	$('.inp_search_epsg').val(0);
				$('.epsgRO').html(0);
			}
		}
		$('.GroupDMS').attr('style',showDMS );
		$('.GroupDD').attr('style', showDD);
		$('.GroupUTM').attr('style', showUTM);
	}

	$(".inp_searchcoord_source").change(function(){
			checkCoordSourceState();
			if($('.inp_WKT').html().length != 0){
				fill_points_lines_from_wkt(2);
			}
	});

	function convertCoordinatesDMS2DD(){
		var latD=0.0;
		var latM=0.0;
		var latS=0.0;
		var latSign=1;
		// $(".lati_deg_0").val()???
		if($(".DMSLatDeg").val().length > 0){
			latD=$(".DMSLatDeg").val().replace(/\,/, ".");
		}
		if($(".DMSLatMin").val().length > 0){
			latM=$(".DMSLatMin").val().replace(/\,/, ".");
		}
		if($(".DMSLatSec").val().length > 0){
			latS=$(".DMSLatSec").val().replace(/\,/, ".");
		}
		if($(".DMSLatSign").val().length > 0){
			latSign=$(".DMSLatSign").val();
		}
		var latDeci= latSign *(parseFloat(latD) + ( parseFloat(latM)/60) + ( parseFloat(latS)/3600));
		if($.isNumeric(latDeci)==false){
			alert('values for DMS coordinates doesn\'t seem numeric, please check your input');
		}
		$(".convertDMS2DDLat").val(latDeci);
		
		
		var longD=0.0;
		var longM=0.0;
		var longS=0.0;
		var longSign=1;
		if($(".DMSLongDeg").val().length > 0){
			longD=$(".DMSLongDeg").val().replace(/\,/, ".");
		}
		if($(".DMSLongMin").val().length > 0){
			longM=$(".DMSLongMin").val().replace(/\,/, ".");
		}
		if($(".DMSLongSec").val().length > 0){
			longS=$(".DMSLongSec").val().replace(/\,/, ".");
		}
		if($(".DMSLongSign").val().length > 0){
			longSign=$(".DMSLongSign").val();
		}
		var longDeci= longSign *(parseFloat(longD) + ( parseFloat(longM)/60) + ( parseFloat(longS)/3600));
		if($.isNumeric(longDeci)==false){
			alert('values for DMS coordinates doesn\'t seem numeric, please check your input');
		}else{
			$(".convertDMS2DDLong").val(longDeci);
		}
		update_point_on_map($(".convertDMS2DDLat").val(),$(".convertDMS2DDLong").val(), null);
	}

	function convertCoordinatesDD2DMS(){
		var lat=$(".convertDMS2DDLat").val();
		var lng=$(".convertDMS2DDLong").val();
		//longitude
		$(".DMSLongDeg").val(Math.floor(Math.abs(lng)));
		$(".DMSLongSign option").filter(function(){
				if(lng<0.0){
					return $(this).val()<0;
				}else{
					return $(this).val()>0;
				}
			}).attr('selected',true);
		var decimalLongitude=Math.abs(lng)-Math.floor(Math.abs(lng));
		decimalLongitudeResultMinute=Math.floor(decimalLongitude*60);
		$(".DMSLongMin").val(decimalLongitudeResultMinute);
		decimalsLongitudeForSeconds=Math.abs(lng)-Math.floor(Math.abs(lng))-(decimalLongitudeResultMinute/60);
		$(".DMSLongSec").val(decimalsLongitudeForSeconds*3600);
		  
		  //latitude
		$(".DMSLatDeg").val(Math.floor(Math.abs(lat)));
		$(".DMSLatSign option").filter(function(){
			if(lat<0.0){
				return $(this).val()<0;
			}else{
				return $(this).val()>0;
			}
		}).attr('selected',true);
		var decimalLatitude=Math.abs(lat)-Math.floor(Math.abs(lat));
		decimalLatitudeResultMinute=Math.floor(decimalLatitude*60);
		$(".DMSLatMin").val(decimalLatitudeResultMinute);
		decimalsLatitudeForSeconds=Math.abs(lat)-Math.floor(Math.abs(lat))-(decimalLatitudeResultMinute/60);
		$(".DMSLatSec").val(decimalsLatitudeForSeconds*3600);
		update_point_on_map($(".convertDMS2DDLat").val(),$(".convertDMS2DDLong").val(), null);
	}

	$(".convertDMS2DDGeneralOnLeave").mouseleave(function(event){
		var idControl=event.target.id;
		var value=$("#"+idControl).val();
		if(value.trim().length>0){
			convertCoordinatesDMS2DD();
		}
	});

	$(".convertDMS2DDGeneralOnLeave").change(function(event){
			coordViewMode=false;
	});

	$(".convertDD2DMSGeneral").change(function(event){
			coordViewMode=false;
			convertCoordinatesDD2DMS();
	});

	$(".convertDMS2DDGeneralOnChange").change(function(event){
			coordViewMode=false;
			convertCoordinatesDMS2DD();
	});

	$(".convertDD2DMSGeneral").mouseleave(function(event){
		var idControl=event.target.id;
		var value=$("#"+idControl).val();
		if(value.trim().length>0){
			convertCoordinatesDD2DMS();
		}
	});

	//to prevent accidental updates of coordibates on mouseleave (as the  GTU are always displayed in "edit" mode)
	function detectBothValCoordExisting(){
		var booleanAlreadyExisting=false;
		var latDD=$(".convertDMS2DDLat").val().trim();
		var latDMS=$(".DMSLatDeg").val().trim();
		var longDD=$(".convertDMS2DDLong").val().trim();
		var longDMS=$(".DMSLongDeg").val().trim();
		if((latDD.length>0||latDMS.length>0)&&(longDD.length>0||longDMS.length>0))
		{
			booleanAlreadyExisting=true;
		}
		return booleanAlreadyExisting;
	}

	//UTM
	$(".UTM2DDGeneralOnLeave").change(function(event){
		convertUTM();
	});

	function convertUTM(){
		zone=$(".UTMZone").val();
		//zone="UTM WGS84 zone 31N";
		//zoneUTM=+proj=utm +zone=8431  +datum=WGS84 +units=m +no_defs
		
		var zoneUTM =  initUTM('tmp', zone.replace( /\D+/g, ''), zone.replace( /[0-9]*/g, ''));

		var wgs84=proj4(p_data_epsg);
		var lat=$(".UTMLat").val();
		var lng=$(".UTMLong").val();
		var conv=proj4(zoneUTM,wgs84,[lng,lat]);

		$(".convertDMS2DDLat").val(conv[1].toFixed(4));
		$(".convertDMS2DDLong").val(conv[0].toFixed(4));
		update_point_on_map($(".convertDMS2DDLat").val(),$(".convertDMS2DDLong").val(), null);
	}

	function initUTM(name, zone, direction ){
		var dir="";
		if(direction=="S"){
			dir="+ south";
		}
		var strProj='+proj=utm +zone='+zone+' '+dir+' +datum=WGS84 +units=m +no_defs ';

		return strProj;
	}


</script>
