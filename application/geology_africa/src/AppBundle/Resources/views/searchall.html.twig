{# src/AppBundle/Resources/views/searchall.html.twig #}

{% extends "@App/searchlayout.html.twig" %}

{% block title %}
	{{ parent() }} - All
{% endblock %}
		
{% block body_top %}
	<style>
      p.collapse{
         display:none;
      }
      
      .ol-popup {
        position: absolute;
        background-color: white;
        -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));

        border-radius: 10px;
        border: 1px solid #cccccc;
        bottom: 12px;
        left: -5px;
        min-width: 500px;
		white-space: pre-wrap;
      }
      .ol-popup:after, .ol-popup:before {
        top: 100%;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
      }
      .ol-popup:after {
        border-top-color: white;
        left: 4px;
        margin-left: -10px;
      }

      .ol-popup-closer {
        text-decoration: none;
        position: absolute;
        top: 2px;
        right: 8px;
      }
      .ol-popup-closer:after {
        content: "âœ–";
      }
	  .tablepopup{
			width:100%;
			border: 1px solid black;
	  }

		.tablepopup_td1 {
			background-color: #bde9ba; 
			width:5%;
			border-bottom: 1px solid black;
		}
		
		.tablepopup_td2 {
			width:90%;
			border-bottom: 1px solid black;
		}
		
		.tablepopup_td3 {
			width:5%;
			border-bottom: 1px solid black;
		}
    </style>
	<table width = "100%">
		<tr>
			<th class="title_table_search" width="100%" colspan = "2">
				Samples
			</th>
		</tr>
		<tr>
			<td width = "50%">
				<table class="ui-front table_search">
					<tr>
						<th width = "20%">
							Collection:
						</th>
						<td width = "30%">
							<select id="inp_searchsamplecoll" class="inp_searchsamplecoll">
								<option value="all">All</option>
							</select>
						</td>
						<th  width = "20%">
							Museum number:
						</th>
						<td width = "30%">
							<input type="integer" class="inp_searchmuseumnr">
						</td>
					</tr>
					<tr>
						<th >
							Sample ID:
						</th>
						<td>
							<input type="integer" class="inp_searchnum_sample">
						</td>
						<th >
							Museum location:
						</th>
						<td>
							<input type="text" class="inp_searchmuseumloc">
						</td>
					</tr>
					<tr>
						<th >
							Field number:
						</th>
						<td>
							<div>
								<input type="text" class="inp_searchfieldnum_sample" data-toggle="tooltip" data-placement="top" title="Field number">
							</div>
						</td>
						<th >
							Box number:
						</th>
						<td>
							<input type="text" class="inp_searchboxnbr">
						</td>
					</tr>
				</table>
			</td>
			<td width = "50%">
				<table class="ui-front table_search">
					<tr>
						<th width = "20%">
							Radioactivity:
						</th>
						<td width = "30%">
							<!--<input type="checkbox" name="inp_searchradioact" class="inp_searchradioact" value="1" data-toggle="tooltip" data-placement="top" title="Check to see records with values in radioactivity">-->
							<select id="inp_searchradioact" class="inp_searchradioact" data-toggle="tooltip" data-placement="top" title="Enter a radioactivity level">
								<option value="all">All</option>
								<option value=0>0</option>
								<option value=1>1</option>
								<option value=2>2</option>
								<option value=3>3</option>
								<option value=4>4</option>
								<option value=5>5</option>
							</select>
						</td>
						<th  width = "20%">
							Holotype:
						</th>
						<td width = "30%">
							<input type="checkbox" name="inp_searchholotype" class="inp_searchholotype" value="1" data-toggle="tooltip" data-placement="top" title="Check to see only holotypes">
						</td>
					</tr>
					<tr>
						<th >
							Slimplate:
						</th>
						<td>
							<div>
								<input type="checkbox" name="inp_searchslimplate" class="inp_searchslimplate" value="1" data-toggle="tooltip" data-placement="top" title="Check to see records with slimplates">
							</div>
						</td>
						<th >
							Paratype:
						</th>
						<td>
							<input type="checkbox" name="inp_searchparatype" class="inp_searchparatype" value="1" data-toggle="tooltip" data-placement="top" title="Check to see only paratypes">
						</td>
					</tr>
					<tr>
						<th >
							Chemical analysis:
						</th>
						<td>
							<input type="checkbox" name="inp_searchchemanalysis" class="inp_searchchemanalysis" value="1" data-toggle="tooltip" data-placement="top" title="Check to see records with values in chemical analysis">
						</td>
						<td width="75%" colspan="2">
						</td>
					</tr>
				</table>
			</td>
		</tr>
		<tr>
			<td width = "50%">
				<table class="ui-front table_search">
					<tr>
						<th>
							Description:
						</th>
						<td colspan="3">
							<input type="text" class="inp_searchdescr fulllength" data-toggle="tooltip" data-placement="top" title="Description of the sample">
						</td>
					</tr>
					<tr>
						<th width = "20%">
							Weight:
						</th>
						<td width = "30%">
							<input type="integer" class="inp_searchweight" data-toggle="tooltip" data-placement="top" title="Weight of the sample (integer)">
						</td>
						<th  width = "20%">
							Size:
						</th>
						<td width = "30%">
							<input type="text" class="inp_searchsize" data-toggle="tooltip" data-placement="top" title="Size of the sample : integer or '15 x 10 cm',...">
						</td>
					</tr>
					<tr>
						<th >
							Dimension code:
						</th>
						<td>
							<select id="inp_searchdimension" class="inp_searchdimension" data-toggle="tooltip" data-placement="top" title="Code for the sample dimension">
								<option value="all">All</option>
								<option value=0>0</option>
								<option value=1>1</option>
								<option value=2>2</option>
								<option value=3>3</option>
								<option value=4>4</option>
								<option value=5>5</option>
							</select>
						</td>
						<th >
							Quality:
						</th>
						<td>
							<select id="inp_searchquality" class="inp_searchquality" data-toggle="tooltip" data-placement="top" title="'Quality' of the sample(integer)">
								<option value="all">All</option>
								<option value=0>0</option>
								<option value=1>1</option>
								<option value=2>2</option>
								<option value=3>3</option>
								<option value=4>4</option>
								<option value=5>5</option>
							</select>
						</td>
					</tr>
				</table>
			</td>
			<td width = "50%">
				<table class="ui-front table_search">
					<tr>
						<th width = "20%">
							Various info:
						</th>
						<td colspan="3">
							<input type="text" class="inp_searchvariousinfo fulllength">
						</td>
					</tr>
					<tr>
						<th>
							Security level:
						</th>
						<td width = "30%">
							<select id="inp_searchsecuritylevel" class="inp_searchsecuritylevel" data-toggle="tooltip" data-placement="top" title="Protection level of the sample(integer)">
								<option value="all">All</option>
								<option value=0>0</option>
								<option value=1>1</option>
								<option value=2>2</option>
								<option value=3>3</option>
								<option value=4>4</option>
								<option value=5>5</option>
							</select>
						</td>
						<th>
							Loan info:
						</th>
						<td>
							<input type="text" class="inp_searchloaninfo">
						</td>
					</tr>
					<tr>
						<td colspanning="4">
						</td>
					</tr>							
				</table>
			</td>
		</tr>
		<tr>
			<td width = "50%">
				<!--<div class="divminerals" style="display:none">-->
				<table class="ui-front table_search only_minerals">
					<tr>
						<th  width="100%" colspan = "4">
							Minerals
						</th>
					</tr>
					<tr>
						<th width = "20%">
							ID mineral:
						</th>
						<td width = "30%">
							<input type="integer" class="inp_searchidmineral">
						</td>
						<th width = "20%">
							Grade:
						</th>
						<td width = "30%">
							<select id="inp_searchmingrade" class="inp_searchmingrade" data-toggle="tooltip" data-placement="top" title="Estimation of the gemological quality">
								<option value="all">All</option>
								<option value=0>0</option>
								<option value=1>1</option>
								<option value=2>2</option>
								<option value=3>3</option>
								<option value=4>4</option>
								<option value=5>5</option>
							</select>
						</td>
					</tr>
					<tr>
						<th width = "20%">
							Class:
						</th>
						<td  width = "30%">
							<select class="inp_searchminclass" style="max-width:150px;">
								<option value="all">All</option>
							</select>
						</td>
						<th >
							Group:
						</th>
						<td >
							<select class="inp_searchmingroup">
								<option value="all">All</option>
							</select>
						</td>
						
					</tr>
					<tr>
						<th >
							Mineral:
						</th>
						<td>
							<select class="inp_searchmineral">
								<option value="all">All</option>
							</select>
						</td>
						<th>
							Mineral formula:
						</th>
						<td>
							<input type="text" class="inp_searchmineralFormula" style="max-width:70%;" data-toggle="tooltip" data-placement="top" title="Enter one or more component as written in the formula">
						</td>
					</tr>
				</table>
				<!--</div>-->
			</td>
			<td width = "50%">
				<!--<div class="divlitho" style="display:none">-->
				<table class="ui-front table_search only_litho">
					<tr>
						<th width="100%" colspan = "4">
							Litho
						</th>
					</tr>
					<tr>
						<th>
							Heavy mineral:
						</th>
						<td>
							<select class="inp_searchLithomineral">
								<option value="all">All</option>
							</select>
						</td>
						<th>
							Nbr of min. grains:
						</th>
						<td>
							From <input type="integer" min="0" max="100" class="inp_searchLithoMinnum_from" data-toggle="tooltip" data-placement="top" title="Min. number of grains of one of the heavy minerals">
							to <input type="integer" min="0" max="100" class="inp_searchLithoMinnum_to" data-toggle="tooltip" data-placement="top" title="Max.number of grains of one of the heavy minerals">
						</td>
					</tr>
					<tr>
						<th>
							HM Weight:
						</th>
						<td>
							From <input type="integer" min="0" max="100" class="inp_searchLithoWeight_from" data-toggle="tooltip" data-placement="top" title="Min. weight of subsample used to count heavy minerals">
							to <input type="integer" min="0" max="100" class="inp_searchLithoWeight_to" data-toggle="tooltip" data-placement="top" title="Max. weight of subsample used to count heavy minerals">
						</td>
						<th>
							Granulom. data:
						</th>
						<td>
							<input type="checkbox" name="inp_searchgranulo" class="inp_searchgranulo" value="1" data-toggle="tooltip" data-placement="top" title="Check to see records with granulom. data">
						</td>
					</tr>
					<tr>
						<th>
							Magnetic susceptib.:
						</th>
						<td>
							<!--<select class="inp_searchLithomagnet">
								<option value="All">All</option>
								<option value="3">+ + +</option>
								<option value="2">+ +</option>
								<option value="1">+</option>
								<option value="-1">-</option>
								<option value="-2">- -</option>
								<option value="-3">- - -</option>
							</select>-->
							<select class="inp_searchLithomagnet" data-toggle="tooltip" data-placement="top" title="Value of mesure 1">
								<option value="all">All</option>
								<option value="4">> 250</option>
								<option value="3">100.001 -> 250</option>
								<option value="2">50.001 -> 100</option>
								<option value="1">0 -> 50</option>
								<option value="-1">-0.001 -> -5</option>
								<option value="-2">-5.001 -> -10</option>
								<option value="-3"><-10</option>
							</select>
						</td>
						<th>
							Observation:
						</th>
						<td>
							<input type="text" class="inp_searchLithoObserv">
						</td>
					</tr>
				</table>
				<!--</div>-->
			</td>
		</tr>
	</table>
	<table class="ui-front table_search">
		<tr>
			<th class="title_table_search" width="100%" colspan = "8">
				Contribution
			</th>
		</tr>
		<tr>
			<th width = "5%">
				ID :
			</th>
			<td  width = "5%">
				<input type="text" class="inp_searchidcontribution vshortlength">
			</td>
			<th width = "10%">
				Type:
			</th>
			<td  width = "20%">
				<select id="inp_searchconttype" class="inp_searchconttype"  style="max-width:150px;">
					<option value="all">All</option>
				</select>
			</td>
			<th width = "10%">
				Year:
			</th>
			<td >
				<select id="inp_searchcontyear" class="inp_searchcontyear">
					<option value="all">All</option>
				</select>
			</td>
			<th width = "10%">
				Date:
			</th>
			<td >
				from <input type="text" id="inp_searchcontfromdate" class="inp_searchcontfromdate js-datepicker"> 
				to <input type="text" id="inp_searchconttodate" class="inp_searchconttodate js-datepicker">
			</td>
		</tr>
		<tr>
			<th  width="100%" colspan = "8">
				<p style="text-decoration: underline;"> Contributor :</p>
			</th>
		</tr>
		<tr>
			<th >
				ID:
			</th>
			<td>
				<input type="text" class="inp_searchidcontributor vshortlength">
			</td>
			<th>
				Name:
			</th>
			<td>
				<select id="inp_searchcontname" class="inp_searchcontname" name="inp_searchcontname">
					<option value="all">All</option>
				</select>
			</td>
			<th >
				Role:
			</th>
			<td>
				<select id="inp_searchcontrole" class="inp_searchcontrole">
					<option value="all">All</option>
				</select>
			</td>
			<th >
				Order:
			</th>
			<td>
				<input type="text" class="inp_searchcontorder vshortlength">
			</td>
		</tr>
		<tr>
			<th >
				Function:
			</th>
			<td>
				<select id="inp_searchcontfunction" class="inp_searchcontfunction">
					<option value="all">All</option>
				</select>
			</td>
			<th >
				Title:
			</th>
			<td>
				<select id="inp_searchconttitle" class="inp_searchconttitle">
					<option value="all">All</option>
				</select>
			</td>
			<th >
				Status:
			</th>
			<td>
				<select id="inp_searchcontstatus" class="inp_searchcontstatus">
					<option value="all">All</option>
				</select>
			</td>
			<th >
				Institute:
			</th>
			<td>
				<select id="inp_searchcontinstitute" class="inp_searchcontinstitute select200">
					<option value="all">All</option>
				</select>
			</td>
		</tr>
	</table>
	<table class="ui-front table_search">
		<tr>
			<th class="title_table_search" width="100%" colspan = "10">
				Documents
			</th>
		</tr>
		<tr>
			<th width = "5%">
				Collection :
			</th>
			<td  width = "5%">
				<select id="inp_searchdocscoll" class="inp_searchdocscoll">
					<option value="all">All</option>
				</select>
			</td>
			<th width = "5%">
				ID :
			</th>
			<td  width = "5%">
				<input type="text" class="inp_searchiddocument vshortlength">
			</td>
			<th width = "10%">
				Num Archive:
			</th>
			<td  width = "20%">
				<input type="text" class="inp_searchnumarchive vshortlength">
			</td>
			<th width = "10%">
				Central num.:
			</th>
			<td >
				<input type="text" class="inp_searchcentralnum vshortlength">
			</td>
			<th width = "10%">
				Medium:
			</th>
			<td >
				<select id="inp_searchmedium" class="inp_searchmedium" name="inp_searchmedium">
					<option value="all">All</option>
				</select>
			</td>
		</tr>
		<tr>
			<th >
				Filename:
			</th>
			<td>
				<input type="text" class="inp_searchfilename ">
			</td>
			<th>
				DocInfo:
			</th>
			<td  colspan="3">
				<input type="text" class="inp_searchdocinfo fulllength">
			</td>
			<th >
				Doc cartotype:
			</th>
			<td >
				<select id="inp_searchcartotype" class="inp_searchcartotype" name="inp_searchcartotype">
					<option value="all">All</option>
				</select>
			</td>
		</tr>
	</table>
	<table class="ui-front table_search">
		<tr>
			<th class="title_table_search" width="100%" colspan = "8">
				Locations
			</th>
		</tr>
		<tr>
			<th width = "5%">
				Collection :
			</th>
			<td  width = "5%">
				<select id="inp_searchloccoll" class="inp_searchloccoll">
					<option value="all">All</option>
				</select>
			</td>
			<td width=10% style="text-align: right;">
				<b>ID :</b>
			</td>
			<td width=22% style="text-align: left;">
				<input type="text" class="inp_searchidlocation vshortlength">
			</td>
			<td width=10% style="text-align: right;">
				<b>Field number:</b>
			</td>
			<td width=22% style="text-align: left;">
				<input type="text" class="inp_searchfieldnumber vshortlength">
			</td>
			<td  width=16% style="text-align: right;">
				<b>Doc reference:</b>
			</td>
			<td  width=16% style="text-align: left;">
				<input type="text" class="inp_searchdocref shortlength">
			</td>
		</tr>
		<tr>
			<td style="text-align: right;">
				<b>Place:</b>
			</td>
			<td style="text-align: left;">
				<input type="text" class="inp_searchplace">
			</td>
			<th style="text-align: right;">
				Date:
			</th>
			<td colspan=5 style="text-align: left;">
				from <input type="text" id="inp_searchpointfromdate" class="inp_searchpointfromdate js-datepicker shortlength"> 
				to <input type="text" id="inp_searchpointtodate" class="inp_searchpointtodate js-datepicker shortlength">
			</td>
		</tr>
		<tr>
			<th style="text-align: right;">
				Geographical description:
			</th>
			<td colspan=3 style="text-align: left;">
				<input type="text" class="inp_searchgeodesc fulllength">
			</td>
			<th style="text-align: right;">
				Description of the position:
			</th>
			<td colspan=3 style="text-align: left;">
				<input type="text" class="inp_searchposdesc fulllength">
			</td>
		</tr>
		<!--<tr>
			<th >
				<BR>
				Latitude
				<BR>
				Longitude
				<BR><BR><BR>
				Altitude
			</th>
			<th >
				Between
				<BR>
				<input class="inp_searchlatitudefrom vshortlength">
				<BR>
				<input class="inp_searchlongitudefrom vshortlength">
				<BR><BR>
				Between
				<input class="inp_searchaltitudefrom vshortlength">
			</th>
			<th>
				and
				<BR>
				<input class="inp_searchlatitudeto vshortlength">
				<BR>
				<input class="inp_searchlongitudeto vshortlength">
				<BR><BR>
				and
				<input class="inp_searchaltitudeto vshortlength">
			</th>
			<td  colspan="5">
				<table>-->
		<tr>
			<td colspan="2" id="ol_map">
				<style >
					p.collapse{
						display:none;
					}
				</style>

				<!--<div style="display: None">
					<?php echo $form['latitude_dms_degree'];?>
					<?php echo $form['latitude_dms_minutes'];?>
					<?php echo $form['latitude_dms_seconds'];?>
					<?php echo $form['latitude_dms_direction'];?>
					<?php echo $form['longitude_dms_degree'];?>
					<?php echo $form['longitude_dms_minutes'];?>
					<?php echo $form['longitude_dms_seconds'];?>
					<?php echo $form['longitude_dms_direction'];?>
					<?php echo $form['latitude_utm'];?>
					<?php echo $form['longitude_utm'];?>				
					<?php echo $form['latitude'];?>
					<?php echo $form['longitude'];?>
					<?php echo $form['geom_type'];?>
				</div>-->

				<table>
					<tr>
						<td colspan="2">
							<b>coordinates source:</b>
						</td>
						<td>
							<select id="inp_searchcoord_source" class="inp_searchcoord_source">
								<option value="DD">Decimal</option>
								<option value="DMS">Degree Minutes Seconds</option>
								<option value="UTM">UTM</option>
							</select>
						</td>
					</tr>
					<tr>
						<td colspan="2">
							<label><b>Geometry type :</b></label>
						</td>
						<td>
							 <form class="form-inline">
								 <select class="typegeom" id="type" style="display: None">>
									<!--<option value="point">Point</option>
									<option value="linestring">Linestring</option>
									<option value="polygon2">Rectangle from 2 points</option>-->
									<option value="polygon"></option>
								  </select>				  
							      <label class="points_for_geometry"></label>
							</form>
						</td>
					</tr>
					<tr>
						<th colspan="3">
							<label>Enter coordinates :</label>
						</th>
					</tr>
					<tr>
						<td width=20"></td>
						<td colspan="2">
							<form class="list_points">
								<div class="GroupDMS" style="display: None">
									<table>
										<tr>
											<td colspan="7"><b>Latitude:</b></td><td colspan="7"><b>Longitude:</b></td>
										</tr>
										<tr>
											<td><input class="lati_deg_0 vshortlength" type="text" maxlength = "3" value=0></td>
											<td>deg.</td>
											<td><input class="lati_min_0 vshortlength" type="text" maxlength="2" value=0></td>
											<td>min.</td>
											<td><input class="lati_sec_0 vshortlength" type="text" maxlength="8" value=0></td>
											<td>sec.</td>
											<td style="border-right: 1px solid #000000;">
												<select class="latns_0">
													<option value="S">S</option>
													<option value="N">N</option>
												</select>
											</td>
											<td>&nbsp;<input class="longi_deg_0 vshortlength" type="text" maxlength="2" value=0></td>
											<td>deg.</td>
											<td><input class="longi_min_0 vshortlength" type="text" maxlength="2" value=0></td>
											<td>min.</td>
											<td><input class="longi_sec_0 vshortlength" type="text" maxlength="8" value=0></td>
											<td>sec.</td>
											<td><select class="longew_0">
													<option value="E">E</option>
													<option value="W">W</option>
												</select>
											</td>
										</tr>
									</table>
								</div>
								<div class="GroupDD" style="display: None">
									<table>
										<tr>
											<th>Latitude:</th>
											<th>&nbsp;Longitude:</th>
										</tr>
										<tr>
											<td style="border-right: 1px solid #000000;">
												<input class="latiDD_0 vshortlength" type="text" maxlength="12" value=0>
											</td>
											<td>
												&nbsp;<input class="longiDD_0 vshortlength" type="text" maxlength="12" value=0>
											</td>
										</tr>
									</table>
								</div>
								<div class="GroupUTM" style="display: None">
									<table>
										<tr>
											<th>X (meters):</th>
											<th>&nbsp;Y (meters):</th>
											<th>Zone:</th>
											
										</tr>
										<tr>
											<td>
												<input class="longiUTM_0 vshortlength" type="text" maxlength="12" value=0>
											</td>
											<td>
												&nbsp;<input class="latiUTM_0 vshortlength" type="text" maxlength="12" value=0>
											</td>
											<td>
												<input class="zoneUTM_0" type="integer" size="2" min="1" max="60">
												<select class="dirUTM_0">
													<option value="S">S</option>
													<option value="N">N</option>
												</select>
												
											</td>
										</tr>
									</table>
								</div>
								<BR><div class="GroupDMS" id="list_of_coordDMS"></div>
								<div class="GroupDD" id="list_of_coordDD"></div>
								<div class="GroupUTM" id="list_of_coordUTM"></div>
							</form>
						</td>
					</tr>
					<tr>
						<td></td>
						<th colspan="2">
							<label>Show WKT and EPSG fields : </label><input type="checkbox" name="ShowWKT" class="ShowWKT" value="show">
						</th>
					</tr>
					<tr style="display:none;" class="WKT_show">
						<td></td>
						<th>
							<label>WKT:</label>
						</th>
						<td>
							<input class="inp_search_WKT" type="text">
						</td>
					</tr>

					<tr style="display:none;" class="WKT_show">
						<td></td>
						<th>
							<br/>EPSG : 
						</th>
						<td>
							<div style="display: None">
								<input class="inp_search_epsg" type="text">
							</div>
							<label class="epsgRO"></label>
							
						</td>
					</tr>
					<tr>
						<td></td>
						<td colspan="2">
							<br/><input type="button" name="wkt_to_map" id="wkt_to_map" value="Draw to map"/>
						</td>
					</tr>
				</table>
			</td>
			<td>
				<div class="drawdirectlty" style="display: None">
					<label>Or draw directly on map :</label>
				</div>
			</td>
			
			<td colspan="5">
				<table>
					<tr>
						<td colspan="4" id="ol_map">
							<style >
								p.collapse{
									display:none;
								}
							</style>
							<!--<input type="button" id="modeMap" name="modeMap" value="Enable selection"></input> -->
							<div  style="width:700px;height:400px;" id="map" class="map"></div>
							<div id="mouse-position"></div>
							<div id="popup" class="ol-popup" style="display: None">
								<a href="#" id="popup-closer" class="ol-popup-closer"></a>
								<div id="popup-content"></div>
							</div>
						</td>
					</tr>
					<tr>
						<td colspan="4">
							 <select id="layer-select">
								<option value="Road">Road</option>
								<option value="Aerial">Aerial</option>
							 </select>
						</td>
					</tr>
				</table>
				<input type="button" id="cleanSelect" name="cleanSelect" value="Clean selection"></input>
			</td>
		</tr>
		<!--<tr>
			<td colspan="8">
				<fieldset id="lat_long_set">
					<legend><?php echo __('Show Result as map');?> <input type="checkbox" id="show_as_map" autocomplete="off"></legend>
					<table>
						<tr>

						  <td>lat_from</td>
						  <td>lon_from<?php echo image_tag('remove.png', 'alt=Delete class=clear_prop'); ?></td>
						</tr>
						<tr>

						  <td>lat_to</td>
						  <td>lon_to<?php echo image_tag('remove.png', 'alt=Delete class=clear_prop'); ?></td>
						</tr>
					</table>
					<div id="map_search_form" >
						Show accuracy of each point<input type="checkbox" id="show_accuracy" /><br /><br />
						<div style="height:400px;width:100%" id="smap"></div>
						<div class="pager paging_info hidden">
							<?php echo image_tag('info2.png');?>
							<span class="inner_text"></span>
						</div>
					</div>
				</fieldset>
			</td>
		</tr>
		<tr>
			<td colspan="8">
			</td>
		</tr>

		<tr>
			<th  colspan="2">Elevation max:</th>
			<td  colspan="3">From <input class="inp_search_elevation"> to <input class="inp_search_elevation_max">m</td>
		</tr>
		<tr>
			<th  colspan="2">Depth min:</th>
			<td colspan="3">From <input class="inp_search_depth_min"> to <input class="inp_search_depth_max">m</td>
		</tr>-->
				<!--</table>
			</td>
		</tr>-->
	</table>
	<BR/>
	<input type="button" class="but_searchnum" value="Search">

    <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js"></script>
	<!--<script src="{{ asset('js/ol.js') }}"></script>-->
	<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
	<!--<script src="{{ asset('css/ol.css') }}"></script>-->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css" type="text/css">
	<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
	<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.0/css/bootstrap-datepicker.css"> 
    
	<script src="{{ asset('js/jquery-3.3.1.js') }}"></script>
	<script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	
	<script src="{{ asset('js/core.js') }}"></script>
	
	<script type="text/javascript">
		//var collSelect = $(".inp_searchcoll");
		var samplecollSelect = $(".inp_searchsamplecoll");
		var docscollSelect = $(".inp_searchdocscoll");
		var loccollSelect = $(".inp_searchloccoll");
		var minclassSelect = $(".inp_searchminclass");
		var mingroupSelect = $(".inp_searchmingroup");
		var mineralSelect = $(".inp_searchmineral");
		var lithomineralSelect = $(".inp_searchLithomineral");
		var coderesults = [];
		var sortDirection = "";
		var source_selected;
		var proj;
		
		//ajax to fill the comboboxes------
		//collections of sample
		path = "{{ path('app_collection_list', {'querygroup': 'sample%' })  }}";

		$.ajax({
			url: path,
			type: "GET",
			dataType: "JSON",
			success: function (collections) {
				$.each(collections, function (key, collection) {
					samplecollSelect.append('<option value="' + collection.codecollection + '">' + collection.collection + '</option>');
				});
				//$('.inp_searchcoll option[value="L"]').attr('selected','selected');
			//	collval = $('.inp_searchsamplecoll option:selected').val();
			},
			error: function (err) {
				alert("An error ocurred while loading data ...");
			}
		});
		
		//collections of docs
		path = "{{ path('app_collection_list', {'querygroup': 'document%' })  }}";

		$.ajax({
			url: path,
			type: "GET",
			dataType: "JSON",
			success: function (collections) {
				$.each(collections, function (key, collection) {
					docscollSelect.append('<option value="' + collection.codecollection + '">' + collection.collection + '</option>');
				});
				//$('.inp_searchcoll option[value="L"]').attr('selected','selected');
			//	collval = $('.inp_searchdocscoll option:selected').val();
			},
			error: function (err) {
				alert("An error ocurred while loading data ...");
			}
		});
		
		//collections of location
		path = "{{ path('app_collection_list', {'querygroup': 'localisation%' })  }}";

		$.ajax({
			url: path,
			type: "GET",
			dataType: "JSON",
			success: function (collections) {
				$.each(collections, function (key, collection) {
					loccollSelect.append('<option value="' + collection.codecollection + '">' + collection.collection + '</option>');
				});
				//$('.inp_searchcoll option[value="L"]').attr('selected','selected');
			//	collval = $('.inp_searchloccoll option:selected').val();
			},
			error: function (err) {
				alert("An error ocurred while loading data ...");
			}
		});
		
		function naturalCompare(a, b) {
			var ax = [], bx = [];

			a.replace(/(\d+)|(\D+)/g, function(_, $1, $2) { ax.push([$1 || Infinity, $2 || ""]) });
			b.replace(/(\d+)|(\D+)/g, function(_, $1, $2) { bx.push([$1 || Infinity, $2 || ""]) });
			
			while(ax.length && bx.length) {
				var an = ax.shift();
				var bn = bx.shift();
				var nn = (an[0] - bn[0]) || an[1].localeCompare(bn[1]);
				if(nn) return nn;
			}

			return ax.length - bx.length;
		}

		//combo of minerals
		function fill_combos(path,combofield){
			var namesarray = [];
			var fnamesarray = [];
			var uniqueArray = [];
			$.ajax({
				url: path,
				type: "GET",
				dataType: "JSON",
				success: function (data) {
					var i = 0;
					var l = 0;
					namesarray = [];
					fnamesarray = [];
					$.each(data, function (key, data1) {
						if ((data1.mname != null) & (data1.mname != "" )){
							namesarray[i] = data1.mname;
							i++;
						}
						if ((data1.fmname != null)  & (data1.fmname != "")){
							fnamesarray[l] = data1.fmname;
							l++;
						}
					});
					
					if(combofield == mineralSelect){
						var newArray = namesarray;
						var found=false;
						var newindex = i;
						for(var m =0;m<l;m++){
							found=false;
							for(var n =0;n<i;n++){
								if (newArray[n].toLowerCase() == fnamesarray[m].toLowerCase()){
									found=true;
								}
							}
							if (found==false){
								newindex++;
								newArray[newindex] = fnamesarray[m];
							}
						}

						newArray.sort(naturalCompare);

						for (var j=0;j < newindex;j++){
							if(newArray[j] != null){
								combofield.append('<option value="' + newArray[j] + '">' + newArray[j].toLowerCase() + '</option>');
							}
						};
					}else{
						for (var k=0;k<fnamesarray.length;k++){
							combofield.append('<option value="' + fnamesarray[k] + '">' + fnamesarray[k].toLowerCase() + '</option>');
						};
					}
				},
				error: function (err) {
					alert("An error ocurred while loading data ...");
				}
			});
		};
		fill_combos("{{ path('app_minerals_list', {'querygroup': 'class' })  }}",minclassSelect);
		fill_combos("{{ path('app_minerals_list', {'querygroup': 'group' })  }}",mingroupSelect);
		fill_combos("{{ path('app_minerals_list', {'querygroup': 'mineral' })  }}",mineralSelect);
		
		//combo of litho
		$.ajax({
			url: "{{ path('app_lithominerals_list')  }}",
			type: "GET",
			dataType: "JSON",
			success: function (lithominerals) {
				$.each(lithominerals, function (key, lithomineral) {
					lithomineralSelect.append('<option value="' + lithomineral.mineral + '">' + lithomineral.mineral + '</option>');
				});
			},
			error: function (err) {
				alert("An error ocurred while loading data ...");
			}
		});
		
		//code if coll changed------	
	/*	$('.inp_searchcoll').on('change', function() {
			collval = $('.inp_searchcoll option:selected').val();
			/*if (collval == "M"){
				$(".divminerals").show();
			}
			if (collval == "F"){
				$(".divfossils").show();
			}
			if (collval == "L"){
				$(".divlitho").show();
			}* /
			coderesults = [];
		});

		$(".inp_searchfieldnum_sample").autocomplete({
			source: function(request, response) {
				$.ajax({
					url: "{{ path('app_code_autocomplete')  }}",  
					data : {coll:collval,code:$(".inp_searchfieldnum_sample").val()}, 
					type: "GET",
					dataType: "JSON",
					success: function (donnees) {
						var i = 0;
						coderesults = [];
						$.each(donnees, function (key, donnee) {
							coderesults[i] = donnee.fieldnum;
							i++;
						});
						response(coderesults);
					}
				})
			},
			minLength: 2
		});*/
		
		$('.js-datepicker').datepicker({dateFormat: 'dd/mm/yy'});
		var yearSelect = $(".inp_searchcontyear");
		
		$thisyear = new Date().getFullYear();
		for (var j=$thisyear;j > 1700;j--){
			yearSelect.append('<option value="' + j + '">' + j + '</option>');
		};
			
		function isNumeric(n) {
		  return !isNaN(parseFloat(n)) && isFinite(n);
		}			
		$(document).on('change',".inp_searchcontorder",function(){
			if(!isNumeric($('.inp_searchcontorder').val()) ){
				alert("Please enter a numeric value in field Order");
			}
		});
				
		//fill the comboboxes of contributions------
		function fill_comboboxes(entry_field,url,codeval){
			$.ajax({
				url: url,  
				data : {code:codeval}, 
				type: "GET",
				dataType: "JSON",
				success: function (donnees) {
				valsarray = [];
				var i = 0;
					$.each(donnees, function (key, donnee) {
						if ((donnee.valdata != null) & (donnee.valdata != "" )){
							valsarray[i] = donnee.valdata;
							i++;
						}
					});
					for (var j=0;j < valsarray.length;j++){
						if(valsarray[j] != null){
							entry_field.append('<option value="' + valsarray[j] + '">' + valsarray[j] + '</option>');
						}
					};
					//collval = $('.inp_searchcoll option:selected').val();
				},
				error: function (err) {
					alert("An error ocurred while loading data ...");
				}
			});

		}
		fill_comboboxes($(".inp_searchconttype"),"{{ path('app_contribdata_combobox')  }}",1);
		fill_comboboxes($(".inp_searchcontname"),"{{ path('app_contribdata_combobox')  }}",2);
		fill_comboboxes($(".inp_searchcontrole"),"{{ path('app_contribdata_combobox')  }}",3);
		fill_comboboxes($(".inp_searchcontfunction"),"{{ path('app_contribdata_combobox')  }}",4);
		fill_comboboxes($(".inp_searchconttitle"),"{{ path('app_contribdata_combobox')  }}",5);
		fill_comboboxes($(".inp_searchcontstatus"),"{{ path('app_contribdata_combobox')  }}",6);
		fill_comboboxes($(".inp_searchcontinstitute"),"{{ path('app_contribdata_combobox')  }}",7);
		
		//fill comboboxes of documents------

		fill_comboboxes($(".inp_searchmedium"),"{{ path('app_docsdata_combobox')  }}",1);
		fill_comboboxes($(".inp_searchcartotype"),"{{ path('app_docsdata_combobox')  }}",2);
		
		function searchclic(){
			datrfr = $(".inp_searchcontfromdate").val().replace("/","-").replace("/","-");
			dateto = $(".inp_searchconttodate").val().replace("/","-").replace("/","-");
			if ($(".inp_search_WKT").val().length == 0){
				$(".inp_search_WKT").val('n');
			}
		
			var queryvals = "samplecollection:"+$(".inp_searchsamplecoll").val()
			+",,searchnum_sample:"+$(".inp_searchnum_sample").val()
			+",,fieldnum_sample:"+$(".inp_searchfieldnum_sample").val()
			+",,museumnr:"+$(".inp_searchmuseumnr").val()
			+",,museumloc:"+$(".inp_searchmuseumloc").val()
			+",,boxnbr:"+$(".inp_searchboxnbr").val()
			+",,descr:"+$(".inp_searchdescr").val()
			+",,weight:"+$(".inp_searchweight").val()
			+",,size:"+$(".inp_searchsize").val()
			+",,dimension:"+$(".inp_searchdimension").val()
			+",,quality:"+$(".inp_searchquality").val()
			//+",,radioactivity:"+$("input[name='inp_searchradioact']:checked").val()
			+",,radioactivity:"+$(".inp_searchradioact").val()
			+",,slimplate:"+$("input[name='inp_searchslimplate']:checked").val()
			+",,chemanalysis:"+$("input[name='inp_searchchemanalysis']:checked").val()
			+",,holotype:"+$("input[name='inp_searchholotype']:checked").val()
			+",,paratype:"+$("input[name='inp_searchparatype']:checked").val()
			+",,loaninfo:"+$(".inp_searchloaninfo").val()
			+",,securitylevel:"+$(".inp_searchsecuritylevel").val()
			+",,variousinfo:"+$(".inp_searchvariousinfo").val()
			
			+",,idmineral:"+$(".inp_searchidmineral").val()
			+",,grademineral:"+$(".inp_searchmingrade").val()
			+",,classmineral:"+$(".inp_searchminclass").val()
			+",,groupmineral:"+$(".inp_searchmingroup").val()
			+",,mineral:"+$(".inp_searchmineral").val()
			+",,formulamineral:"+$(".inp_searchmineralFormula").val()
			
			+",,lithomineral:"+$(".inp_searchLithomineral").val()
			+",,lithominnum_from:"+$(".inp_searchLithoMinnum_from").val()
			+",,lithominnum_to:"+$(".inp_searchLithoMinnum_to").val()
			+",,lithoweight_from:"+$(".inp_searchLithoWeight_from").val()
			+",,lithoweight_to:"+$(".inp_searchLithoWeight_to").val()
			+",,lithoobserv:"+$(".inp_searchLithoObserv").val()
			
			+",,lithogranulo:"+$("input[name='inp_searchgranulo']:checked").val()
			+",,lithomagnet:"+$(".inp_searchLithomagnet").val()
			
			+",,idcontribution:"+$(".inp_searchidcontribution").val()
			+",,type:"+$(".inp_searchconttype").val()
			+",,year:"+$(".inp_searchcontyear").val()
			+",,date_from:"+datrfr
			+",,date_to:"+dateto
			+",,idcontributor:"+$(".inp_searchidcontributor").val()
			+",,people:"+$(".inp_searchcontname").val()
			+",,function:"+$(".inp_searchcontfunction").val()
			+",,title:"+$(".inp_searchconttitle").val()
			+",,status:"+$(".inp_searchcontstatus").val()
			+",,institute:"+$(".inp_searchcontinstitute").val()
			+",,role:"+$(".inp_searchcontrole").val()
			+",,order:"+$(".inp_searchcontorder").val()
			
			+",,loccollection:"+$(".inp_searchloccoll").val()
			+",,searchidpoint:"+$(".inp_searchidlocation").val()
			+",,date_from:"+$(".inp_searchpointfromdate").val()
			+",,date_to:"+$(".inp_searchpointtodate").val()
			+",,fieldnum:"+$(".inp_searchfieldnumber").val()
			+",,place:"+$(".inp_searchplace").val()
			+",,geodescription:"+$(".inp_searchgeodesc").val()
			+",,positiondescription:"+$(".inp_searchposdesc").val()
			+",,docref:"+$(".inp_searchdocref").val()
			+",,wkt:"+$(".inp_search_WKT").val()
			;

			if ( $( ".inp_searchNbrResByPage" ).length ) {
				queryvals = queryvals + ",,NbrResByPage:"+$(".inp_searchNbrResByPage").val();
			}else{
				queryvals = queryvals + ",,NbrResByPage:20";
			}
		
			if ( sortDirection.length ) {
				queryvals = queryvals + ",,sortDirection:"+sortDirection;
			}else{
				queryvals = queryvals + ",,sortDirection:token ASC";
			}

			var url = '{{ path("app_result_all", {'queryvals': 'article_id'}) }}'; 
			url = url.replace("article_id", queryvals);
			window.location = url;
		}
					
		$(document).ready(function() {
			$(".but_searchnum").click(searchclic);

			checkCoordSourceState();
			drawmap();
			addInteraction();
			
			var origin = 0;

			if($('.inp_search_WKT').val().length != 0){
					
				GenWKT_and_draw(origin);
				fill_points_lines_from_original_values();
			}else{
				var testlength=0;
				testlength =  parseFloat($(".lati_deg_0").val()) +  parseFloat($(".latiDD_0").val()) +  parseFloat($(".latiUTM_0").val());
				//testlength = $(".DMSLatDeg").val() + $(".convertDMS2DDLat").val() + $(".UTMLat").val();

				if(testlength != 0){
					var wktfromlatlong = "";
					var latsign = "S";
					var longsign = "W";
					var DMSLatSec = 0;
					var DMSLongSec = 0;
					typegeom = "polygon";
					nbrpoints = 4;
					GenWKT_and_draw(1);
				}//else{
					//$('.points_for_geometry').html('<i>Enter latitude-longitude of points A and B:</i><img src="{{ asset('pics/rect_2points.jpg') }}" alt="home" height="50" width="50">');
					draw_points_input_fields(4);
					$('.nbrpoints').val(4);
				//}
			}

			$('.ShowWKT').click(function() {
				$(".WKT_show").toggle(this.checked);
			});

			showDMSCoordinates=false;
			
			$('.nbrpoints').change(function() {
				draw_points_input_fields($('.nbrpoints').val());
			});
		});
	
		//Map code----------------------------------------------------
		var map;
		var showDMSCoordinates;
		var coordViewMode=true;
		var controls;
		//var valueType = 'none';
		var valueType = 'polygon';
		var vectorlayer;
		var mousePositionControl;
		var scaleLineControl;
		var styleLine;
		var source;
		var vectorLoaded =false;
		var draw;
		var iLayer=0;
		var main_layer_global;
		var p_data_epsg= 'EPSG:4326';
		const typeSelect =  document.getElementById('type');
		var autoDraw=false;
		var vectorlayer_local;

		var styleWKT= new ol.style.Style({
			  fill: new ol.style.Fill({
				color: 'rgba(255, 255, 255, 0.2)'
			  }),
			  stroke: new ol.style.Stroke({
				color: '#ffcc33',
				width: 4
			  }),
			  image: new ol.style.Circle({
				radius: 7,
				fill: new ol.style.Fill({
				  color: '#ffcc33'
				})
			  })
			});
	
		function removeDarwinLayer(p_max){			
			if(vectorLoaded){
				map.getLayers().forEach(function(layer) {	
					if (typeof layer !== 'undefined') {						
						if(layer.get("name")!="background"&&parseInt(layer.get("name")) <= p_max ){						
							map.removeLayer(layer);
						}
					}
				});
			}		
		}
		
		$("#wkt_to_map").click(
			function(){
				GenWKT_and_draw(1);
			}
		);
		
		function GenWKT_and_draw(origin){
				if(origin == 1){ //to prevent generation of wkt at form loading
					generate_wkt_vector();
				}

				var wkt_epsg="EPSG:"+ $(".inp_search_epsg").val();

				var wkt_str=$('.inp_search_WKT').val(); //$("#gtu_wkt_str").val();
	
				if(wkt_str.length>0 && wkt_epsg.length>0){
					draw_wkt(wkt_str, "EPSG:4326");
				}
		}
		
		
		
		function draw_wkt(p_featureWKT, p_epsg)
		{
			var format = new ol.format.WKT();
			var featureWKT = format.readFeature(p_featureWKT, {
					dataProjection: p_epsg,
					featureProjection: 'EPSG:3857'
				});
				
			p_data_epsg=p_epsg;
			addDarwinLayer(featureWKT,"from values");	
		}
		
		function addDarwinLayer(feature,origininput)
		{
			 var tmp_geom;
			 
			 switch (valueType)
			{
				case "point":
					tmp_geom=new ol.geom.Point(feature.getGeometry().getCoordinates());
					generic_feature = new ol.Feature({geometry: tmp_geom});
					break;
				case "linestring":
					tmp_geom=new ol.geom.LineString(feature.getGeometry().getCoordinates());
					generic_feature = new ol.Feature({geometry: tmp_geom});
					break;
				case "polygon": 
				   tmp_geom=new ol.geom.Polygon(feature.getGeometry().getCoordinates());
				   generic_feature = new ol.Feature({geometry: tmp_geom});
				   break;
				 default :
					generic_feature=feature;
					tmp_geom=generic_feature.getGeometry();				
					break;
			}
			var tmpSource=new ol.source.Vector();
			tmpSource.addFeature(generic_feature);
			iLayer++;
			vectorlayer_local = new ol.layer.Vector({
						name: iLayer,
						source: tmpSource,
						style: styleWKT	});

			map.addLayer(vectorlayer_local);
			removeDarwinLayer(iLayer);
			
			if (origininput == "from drawing"){
				var format = new ol.format.WKT();
				tmp_geom4326= tmp_geom.clone();
				tmp_geom4326.transform("EPSG:3857", "EPSG:4326");
				wktfeaturegeom = format.writeGeometry(tmp_geom4326);
				$('.inp_search_WKT').val(wktfeaturegeom);
				fill_points_lines_from_wkt(1);
			}
		
			map.getView().fit(vectorlayer_local.getSource().getExtent());
			map.getView().setZoom(7);
			vectorLoaded=true;		
		}
		
		function TransformStrTypeWithUppercase(type){
			if(type=="none"){
				return "None";
			}else if(type=="point"){
				return "Point";
			}else if(type=="linestring"){
				return "LineString";
			}else if(type=="polygon"){
				return "Polygon";
			}else{return "";}
		}
		
		function addInteraction() {
			if (valueType !== 'none') {
				removeDarwinLayer();
				draw=null;
				if (valueType == "polygon2"){
					typegeom = "polygon";
				}else{
					typegeom = valueType;
				}

				draw = new ol.interaction.Draw({
					source: new ol.source.Vector(),
					type: TransformStrTypeWithUppercase(typegeom)
				});
				map.addInteraction(draw);
				draw.on('drawend', function (event) {
					addDarwinLayer(event.feature,"from drawing");
				});
			}
		}
		
		//typeSelect.onchange = function() {
			$('#list_of_coordDMS').html("");
			$('#list_of_coordDD').html("");
			$('#list_of_coordUTM').html("");
			//create new fields to enter coordinates
			/*valueType = typeSelect.value;
			switch (valueType){
				/ *case "linestring": 
					$('.points_for_geometry').html('<form class="form_points">of <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points</form>');
				   break;* /
				case "polygon": 
					$('.points_for_geometry').html('<form class="form_points">of <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points </form>');
					$('.drawdirectlty').attr('style','display: table-cell');
				   break;
				case "polygon2": 
					$('.points_for_geometry').html('<i>Enter latitude-longitude of points A and B:</i><img src="{{ asset('pics/rect_2points.jpg') }}" alt="home" height="50" width="50">');
					draw_points_input_fields(2);
					break;
				default:
					$('.points_for_geometry').html('<i>Enter latitude-longitude of points A and B:</i><img src="{{ asset('pics/rect_2points.jpg') }}" alt="home" height="50" width="50">');
					draw_points_input_fields(2);
			}*/
			valueType = "polygon";
			$('.points_for_geometry').html('<form class="form_points"><input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points </form>');
			$('.drawdirectlty').attr('style','display: table-cell');
			

			
			$('.latiDD_0').val(0);
			$('.longiDD_0').val(0);
			$('.lati_deg_0').val(0);
			$('.lati_min_0').val(0);
			$('.lati_sec_0').val(0);
			$( '.latns_0'+' option:selected' ).text("S");
			$('.longi_deg_0').val(0);
			$('.longi_min_0').val(0);
			$('.longi_sec_0').val(0);
			$( '.longew_0'+' option:selected' ).text("E");
			$('.longiUTM_0').val(0);
			$('.latiUTM_0').val(0);
			$('.zoneUTM_0').val(0);
			$('.dirUTM_0').val("S");
			$('.inp_search_WKT').val("");
			
			//IMPORTANT DO NOT MOVE THIS OR LAYERS ARE NOT DELETED
			//map.removeInteraction(draw);
			//addInteraction();
		//};	  
		
		//JMHerpers 2018 07 09
		function draw_points_input_fields(nbrpointsin){
			if (nbrpointsin != ""){
				//List of fields for DMS-------------
				var htmlcontent = '<table>';
				for (i=1;i<nbrpointsin;i++){
					htmlcontent = htmlcontent + '<tr>';
					htmlcontent = htmlcontent + '<td><input class="lati_deg_'+i+' vsmall_size" type="text" maxlength = "3" value=0></td>';
					htmlcontent = htmlcontent + '<td>deg.</td>';
					htmlcontent = htmlcontent + '<td><input class="lati_min_'+i+' vsmall_size" type="text" maxlength="2" value=0></td>';
					htmlcontent = htmlcontent + '<td>min.</td>';
					htmlcontent = htmlcontent + '<td><input class="lati_sec_'+i+' vsmall_size" type="text" maxlength="8" value=0></td>';
					htmlcontent = htmlcontent + '<td>sec.</td>';
					htmlcontent = htmlcontent + '<td style="border-right: 1px solid #000000;"  ><select class="latns_'+i+'">';
					htmlcontent = htmlcontent + '		<option value="S">S</option>';
					htmlcontent = htmlcontent + '		<option value="N">N</option>';
					htmlcontent = htmlcontent + '	</select></td>';
					htmlcontent = htmlcontent + '<td>&nbsp;<input class="longi_deg_'+i+' vsmall_size" type="text" maxlength="2" value=0></td>';
					htmlcontent = htmlcontent + '<td>deg.</td>';
					htmlcontent = htmlcontent + '<td><input class="longi_min_'+i+' vsmall_size" type="text" maxlength="2" value=0></td>';
					htmlcontent = htmlcontent + '<td>min.</td>';
					htmlcontent = htmlcontent + '<td><input class="longi_sec_'+i+' vsmall_size" type="text" maxlength="8" value=0></td>';
					htmlcontent = htmlcontent + '<td>sec.</td>';
					htmlcontent = htmlcontent + '<td><select class="longew_'+i+'">';
					htmlcontent = htmlcontent + '		<option value="E">E</option>';
					htmlcontent = htmlcontent + '		<option value="W">W</option>';
					htmlcontent = htmlcontent + '	</select></td>';
					htmlcontent = htmlcontent + '</tr>';
				};

				htmlcontent = htmlcontent + '</table>';
				$('#list_of_coordDMS').html(htmlcontent);
				
				//List of fields for DD-------------
				var htmlcontent2 = '<table>';
				for (i=1;i<nbrpointsin;i++){
					htmlcontent2 = htmlcontent2 + '<tr>';
					htmlcontent2 = htmlcontent2 + '<td style="border-right: 1px solid #000000;"><input class="latiDD_'+i+' vshortlength" type="text" maxlength="12" value=0></td>';
					htmlcontent2 = htmlcontent2 + '<td>&nbsp;<input class="longiDD_'+i+' vshortlength" type="text" maxlength="12" value=0></td>';
					htmlcontent2 = htmlcontent2 + '</tr>';
				};

				htmlcontent2 = htmlcontent2 + '</table>';
				$('#list_of_coordDD').html(htmlcontent2);
				
				//List of fields for UTM-------------
				var htmlcontent3 = '<table>';
				for (i=1;i<nbrpointsin;i++){
					htmlcontent3 = htmlcontent3 + '<tr>';
					htmlcontent3 = htmlcontent3 + '<td>';
					htmlcontent3 = htmlcontent3 + '&nbsp;<input class="longiUTM_'+i+' vshortlength" type="text" maxlength="12" value=0>';
					htmlcontent3 = htmlcontent3 + '</td>';
					htmlcontent3 = htmlcontent3 + '<td>';
					htmlcontent3 = htmlcontent3 + '<input class="latiUTM_'+i+' vshortlength" type="text" maxlength="12" value=0>';
					htmlcontent3 = htmlcontent3 + '</td>';
					htmlcontent3 = htmlcontent3 + '<td>';
					htmlcontent3 = htmlcontent3 + '<input class="zoneUTM_'+i+'" type="integer" size="2" min="1" max="60">';
					htmlcontent3 = htmlcontent3 + '<select class="dirUTM_'+i+'">';
					htmlcontent3 = htmlcontent3 + '	<option value="S">S</option>';
					htmlcontent3 = htmlcontent3 + '	<option value="N">N</option>';
					htmlcontent3 = htmlcontent3 + '</select>';
					htmlcontent3 = htmlcontent3 + '</td>';
					htmlcontent3 = htmlcontent3 + '</tr>';
				};

				htmlcontent3 = htmlcontent3 + '</table>';
				$('#list_of_coordUTM').html(htmlcontent3);
			}
		}
		
		function Fill_original_values(){
			var originalcoords = "";
			if (source_selected == "DMS"){
				if (valueType != 'polygon2') {
					for (i=0;i<nbrpoints;i++){
						originalcoords = originalcoords 
							+ parseFloat($('.lati_deg_'+i).val()) +"Â°"+parseFloat($('.lati_min_'+i).val())+"'"+parseFloat($('.lati_sec_'+i).val())+"\""+$( '.latns_'+i+' option:selected' ).text()+" "
							+ parseFloat($('.longi_deg_'+i).val()) +"Â°"+parseFloat($('.longi_min_'+i).val())+"'"+parseFloat($('.longi_sec_'+i).val())+"\""+$( '.longew_'+i+' option:selected' ).text()
							+",";
					}
				}else{
					originalcoords = originalcoords 
						+ parseFloat($('.lati_deg_0').val()) +"Â°"+parseFloat($('.lati_min_0').val())+"'"+parseFloat($('.lati_sec_0').val())+"\""+$( '.latns_0'+' option:selected' ).text()+" "
						+ parseFloat($('.longi_deg_0').val()) +"Â°"+parseFloat($('.longi_min_0').val())+"'"+parseFloat($('.longi_sec_0').val())+"\""+$( '.longew_0'+' option:selected' ).text()+","
						
						+ parseFloat($('.lati_deg_0').val()) +"Â°"+parseFloat($('.lati_min_0').val())+"'"+parseFloat($('.lati_sec_0').val())+"\""+$( '.latns_0'+' option:selected' ).text()+" "
						+ parseFloat($('.longi_deg_1').val()) +"Â°"+parseFloat($('.longi_min_1').val())+"'"+parseFloat($('.longi_sec_1').val())+"\""+$( '.longew_1'+' option:selected' ).text()+","
						
						+ parseFloat($('.lati_deg_1').val()) +"Â°"+parseFloat($('.lati_min_1').val())+"'"+parseFloat($('.lati_sec_1').val())+"\""+$( '.latns_1'+' option:selected' ).text()+" "
						+ parseFloat($('.longi_deg_1').val()) +"Â°"+parseFloat($('.longi_min_1').val())+"'"+parseFloat($('.longi_sec_1').val())+"\""+$( '.longew_1'+' option:selected' ).text()+","
						
						+ parseFloat($('.lati_deg_1').val()) +"Â°"+parseFloat($('.lati_min_1').val())+"'"+parseFloat($('.lati_sec_1').val())+"\""+$( '.latns_1'+' option:selected' ).text()+" "
						+ parseFloat($('.longi_deg_0').val()) +"Â°"+parseFloat($('.longi_min_0').val())+"'"+parseFloat($('.longi_sec_0').val())+"\""+$( '.longew_0'+' option:selected' ).text()+",";
				}
			}
			if (source_selected == "DD"){
				if (valueType != 'polygon2') {
					for (i=0;i<nbrpoints;i++){
						originalcoords  = originalcoords + $('.longiDD_'+i).val() + " " + $('.latiDD_'+i).val()+ ",";
					}
				}else{
					latDeci0= $('.latiDD_0').val();
					longDeci0= $('.longiDD_0').val();
					latDeci2= $('.latiDD_1').val();
					longDeci2= $('.longiDD_1').val();
					latDeci1= latDeci0;
					longDeci1= longDeci2;
					latDeci3= latDeci2;
					longDeci3= longDeci0;
					originalcoords  = originalcoords + longDeci0 + " " + latDeci0 + ","+ longDeci1 + " " + latDeci1 + ","+ longDeci2 + " " + latDeci2 + ","+ longDeci3 + " " + latDeci3 + ",";
				}
			}
			if (source_selected == "UTM"){
				if (valueType != 'polygon2') {
					for (i=0;i<nbrpoints;i++){
						originalcoords  = originalcoords + $('.longiUTM_'+i).val() + " " + $('.latiUTM_'+i).val()+ " " +$('.zoneUTM_'+i).val()+ " " +$('.dirUTM_'+i).val()+ ",";
					}
				}else{
					originalcoords  = originalcoords + 	$('.longiUTM_0').val() + " " + $('.latiUTM_0').val()+ " " +$('.zoneUTM_0').val()+ " " +$('.dirUTM_0').val() + ","+ 
														$('.longiUTM_1').val() + " " + $('.latiUTM_0').val()+ " " +$('.zoneUTM_1').val()+ " " +$('.dirUTM_0').val() + ","+ 
														$('.longiUTM_1').val() + " " + $('.latiUTM_1').val()+ " " +$('.zoneUTM_1').val()+ " " +$('.dirUTM_1').val() + ","+ 
														$('.longiUTM_0').val() + " " + $('.latiUTM_1').val()+ " " +$('.zoneUTM_0').val()+ " " +$('.dirUTM_1').val() + ",";
				}
			}

			$('.origcoord').val(originalcoords.substring(0, originalcoords.length-1));
		}
		
		function generate_wkt_vector(){
			var errorval = false;
			var latDeci0= 0;
			var longDeci0= 0;
			/*if (valueType == 'none' | valueType == 'point') {
				typegeom = "point";
				nbrpoints = 1;
			}else*/
			if (valueType == 'polygon2') {
				typegeom = "polygon";
				nbrpoints = $('.nbrpoints').val();
			}else{
				typegeom = valueType;
				nbrpoints = $('.nbrpoints').val();
			}

			if (source_selected == "DMS"){
				$('.inp_search_epsg').val(4326);
				$('.epsgRO').html(4326);
				for (i=0;i<nbrpoints;i++){
					if(((!$.isNumeric($('.lati_deg_'+i).val()) | !$.isNumeric($('.lati_min_'+i).val()) | !$.isNumeric($('.lati_sec_'+i).val()) | 
					   !$.isNumeric($('.longi_deg_'+i).val()) | !$.isNumeric($('.longi_min_'+i).val()) | !$.isNumeric($('.longi_sec_'+i).val()) ) &
					   ( $('.lati_deg_'+i).val().length + $('.lati_min_'+i).val().length + $('.lati_sec_'+i).val().length + 
						 $('.longi_deg_'+i).val().length + $('.longi_min_'+i).val().length + $('.longi_sec_'+i).val().length != 0
					   ))|
						($('.lati_deg_'+i).val().length + $('.lati_min_'+i).val().length + $('.lati_sec_'+i).val().length + 
						 $('.longi_deg_'+i).val().length + $('.longi_min_'+i).val().length + $('.longi_sec_'+i).val().length == 0 & nbrpoints == 1)
					   |
						$('.lati_deg_'+i).val() < 0 | $('.lati_deg_'+i).val() > 90 | $('.longi_deg_'+i).val() < 0 | $('.longi_deg_'+i).val() > 180 |
						$('.lati_min_'+i).val() < 0 | $('.lati_min_'+i).val() > 59 | $('.longi_min_'+i).val() < 0 | $('.longi_min_'+i).val() > 59 |
						$('.lati_sec_'+i).val() < 0 | $('.lati_sec_'+i).val() > 59 | $('.longi_sec_'+i).val() < 0 | $('.longi_sec_'+i).val() > 59 
					){
						errorval = true;
					}
				}
				
				if(errorval == true){
					alert('There are errors in the DMS coordinates entered!');
				}else{
					//////calculate wkt

					var latSign0 ;
					var longSign0 ;
					var latSign1 ;
					var longSign1 ;
					
					wktfromdata = typegeom.toUpperCase() +"(";
					if (typegeom.toUpperCase() == "POLYGON"){
						wktfromdata = wktfromdata +"(";
					}
					if (valueType != 'polygon2') {
						latcalc = 0
						for (i=0;i<nbrpoints;i++){
							var latSign;
							var longSign;
							var latDeci = 0;
							var longDeci = 0;

							if($( '.latns_'+i+' option:selected' ).text() == "S"){
								latSign = -1;
							}else{
								latSign = 1;
							}
							if($( '.longew_'+i+' option:selected' ).text() == "W"){
								longSign = -1;
							}else{
								longSign = 1;
							}
							if(i==0){
								latSign0 = latSign;
								longSign0 = longSign;
							}
							
							latDeci= latSign * (parseFloat($('.lati_deg_'+i).val()) + ( parseFloat($('.lati_min_'+i).val())/60) + ( parseFloat($('.lati_sec_'+i).val())/3600));
							longDeci= longSign  * (parseFloat($('.longi_deg_'+i).val()) + ( parseFloat($('.longi_min_'+i).val())/60) + ( parseFloat($('.longi_sec_'+i).val())/3600));
							latDeci0= latSign0 * (parseFloat($('.lati_deg_0').val()) + ( parseFloat($('.lati_min_0').val())/60) + ( parseFloat($('.lati_sec_0').val())/3600));
							longDeci0= longSign0  * (parseFloat($('.longi_deg_0').val()) + ( parseFloat($('.longi_min_0').val())/60) + ( parseFloat($('.longi_sec_0').val())/3600));
							wktfromdata = wktfromdata +longDeci + " "  +  latDeci + ",";
						}
					}else{
						if($( '.latns_0'+' option:selected' ).text() == "S"){
							latSign0 = -1;
						}else{
							latSign0 = 1;
						}
						if($( '.longew_0'+' option:selected' ).text() == "W"){
							longSign0 = -1;
						}else{
							longSign0 = 1;
						}
						if($( '.latns_1'+' option:selected' ).text() == "S"){
							latSign1 = -1;
						}else{
							latSign1 = 1;
						}
						if($( '.longew_1'+' option:selected' ).text() == "W"){
							longSign1 = -1;
						}else{
							longSign1 = 1;
						}

						latDeci0=  latSign0 * (parseFloat($('.lati_deg_0').val()) + ( parseFloat($('.lati_min_0').val())/60) + ( parseFloat($('.lati_sec_0').val())/3600));
						longDeci0= longSign0  * (parseFloat($('.longi_deg_0').val()) + ( parseFloat($('.longi_min_0').val())/60) + ( parseFloat($('.longi_sec_0').val())/3600));
						
						latDeci2= latSign1 * (parseFloat($('.lati_deg_1').val()) + ( parseFloat($('.lati_min_1').val())/60) + ( parseFloat($('.lati_sec_1').val())/3600));
						longDeci2= longSign1  * (parseFloat($('.longi_deg_1').val()) + ( parseFloat($('.longi_min_1').val())/60) + ( parseFloat($('.longi_sec_1').val())/3600));
						latDeci1= latDeci0;
						longDeci1= longDeci2;
						latDeci3= latDeci2;
						longDeci3= longDeci0;
						wktfromdata = wktfromdata + longDeci0 + " " + latDeci0 + ","+ longDeci1 + " " + latDeci1 + ","+ longDeci2 + " " + latDeci2 + ","+ longDeci3 + " " + latDeci3 + ",";
					}

					$(".convertDMS2DDLat").val(latDeci0);
					$(".convertDMS2DDLong").val(longDeci0);
					$(".DMSLatSign").val(latSign0);
					$(".DMSLongSign").val(longSign0);
					$(".geom_type").val(typegeom);
					
					if(typegeom == "polygon"){
						wktfromdata = wktfromdata + longDeci0 + " " + latDeci0 + "))";
					}
					
					wktfromdata = wktfromdata.substring(0, wktfromdata.length-1) + ")";
					$(".wkt").val(wktfromdata);
				}
			}
			if (source_selected == "DD"){
				$('.inp_search_epsg').val(4326);
				$('.epsgRO').html(4326);
				for (i=0;i<nbrpoints;i++){
					if(((!$.isNumeric($('.latiDD_'+i).val()) | !$.isNumeric($('.longiDD_'+i).val()) ) &
						( $('.latiDD_'+i).val().length + $('.longiDD_'+i).val().length != 0 )
					   )|
					   ($('.latiDD_'+i).val().length + $('.longiDD_'+i).val().length == 0 & nbrpoints == 1)
					   |
						$('.latiDD_'+i).val() < -90 | $('.latiDD_'+i).val() > 90 | $('.longiDD_'+i).val() < -180 | $('.longiDD_'+i).val() > 180 
					  ){
						errorval = true;
					}
				}
				if(errorval == true){
					alert('There are errors in the decimal coordinates entered!');
				}else{
					//////calculate wkt
					wktfromdata = typegeom.toUpperCase() +"(";
					if (typegeom.toUpperCase() == "POLYGON"){
						wktfromdata = wktfromdata +"(";
					}
					if (valueType != 'polygon2') {
						for (i=0;i<nbrpoints;i++){
							var latDeci = 0;
							var longDeci = 0;

							latDeci= $('.latiDD_'+i).val();
							longDeci= $('.longiDD_'+i).val();
							wktfromdata = wktfromdata + longDeci + " " + latDeci + ",";
						}
						$(".convertDMS2DDLat").val($('.latiDD_0').val());
						$(".convertDMS2DDLong").val($('.longiDD_0').val());
					}else{
						latDeci0= $('.latiDD_0').val();
						longDeci0= $('.longiDD_0').val();
						latDeci2= $('.latiDD_1').val();
						longDeci2= $('.longiDD_1').val();
						latDeci1= latDeci0;
						longDeci1= longDeci2;
						latDeci3= latDeci2;
						longDeci3= longDeci0;
						wktfromdata = wktfromdata + longDeci0 + " " + latDeci0 + ","+ longDeci1 + " " + latDeci1 + ","+ longDeci2 + " " + latDeci2 + ","+ longDeci3 + " " + latDeci3 + ",";
						
						$(".convertDMS2DDLat").val(latDeci0);
						$(".convertDMS2DDLong").val(longDeci0);
					}
	
					$(".geom_type").val(typegeom);
					if(typegeom == "polygon"){
						wktfromdata = wktfromdata + $('.longiDD_0').val() + " " + $('.latiDD_0').val() + "))";
					}
				
					wktfromdata = wktfromdata.substring(0, wktfromdata.length-1) + ")";
					$(".inp_search_WKT").val(wktfromdata);
				}
			}
			if (source_selected == "UTM"){
				var dir = 0;
				if($('.dirUTM_0').val() == "N"){
					dir = 326;
				}else{
					dir = 327;
				}
				$('.inp_search_epsg').val(dir+$('.zoneUTM_0').val());
				$('.epsgRO').html(dir+$('.zoneUTM_0').val());

				for (i=0;i<nbrpoints;i++){
					if(((!$.isNumeric($('.latiUTM_'+i).val()) | !$.isNumeric($('.longiUTM_'+i).val()) ) &
						( $('.latiUTM_'+i).val().length + $('.longiUTM_'+i).val().length != 0 )
					   )|
					   ($('.latiUTM_'+i).val().length + $('.longiUTM_'+i).val().length == 0 & nbrpoints == 1)
					   |
						$('.latiUTM_'+i).val() < 0 | $('.latiUTM_'+i).val() > 10000000 | $('.longiUTM_'+i).val() < 0 | $('.longiUTM_'+i).val() > 2000000
					  ){
						errorval = true;
					}
				}
				if(errorval == true){
					alert('There are errors in the UTM coordinates entered!');
				}else{
					//////calculate wkt
					var latUTM = 0;
					var longUTM = 0;
					var coordUTM;
					
					wktfromdata = typegeom.toUpperCase() +"(";
					if (typegeom.toUpperCase() == "POLYGON"){
						wktfromdata = wktfromdata +"(";
					}
					if (valueType != 'polygon2') {
						for (i=0;i<nbrpoints;i++){
							coordUTM= Utm2Wgs($('.longiUTM_'+i).val(),$('.latiUTM_'+i).val(),$('.zoneUTM_'+i).val(),$('.dirUTM_'+i).val());
							latUTM = coordUTM[1].toFixed(4);
							longUTM = coordUTM[0].toFixed(4);

							wktfromdata = wktfromdata + longUTM + " " + latUTM + ",";
							if (i==0){
								$(".convertDMS2DDLat").val(latUTM);
								$(".convertDMS2DDLong").val(longUTM);
							}
						}
					}else{
						coordUTM0= Utm2Wgs($('.longiUTM_0').val(),$('.latiUTM_0').val(),$('.zoneUTM_0').val(),$('.dirUTM_0').val());
						latUTM0 = coordUTM0[1].toFixed(4);
						longUTM0 = coordUTM0[0].toFixed(4);
							
						coordUTM2= Utm2Wgs($('.longiUTM_1').val(),$('.latiUTM_1').val(),$('.zoneUTM_1').val(),$('.dirUTM_1').val());
						latUTM2 = coordUTM2[1].toFixed(4);
						longUTM2 = coordUTM2[0].toFixed(4);
						
						latUTM1= latUTM0;
						longUTM1= longUTM2;
						latUTM3= latUTM2;
						longUTM3= longUTM0;
						wktfromdata = wktfromdata + longUTM0 + " " + latUTM0 + ","+ longUTM1 + " " + latUTM1 + ","+ longUTM2 + " " + latUTM2 + ","+ longUTM3 + " " + latUTM3 + ",";
						
						$(".convertDMS2DDLat").val(latUTM0);
						$(".convertDMS2DDLong").val(longUTM0);
					}
					$(".geom_type").val(typegeom);
					if(typegeom == "polygon"){
						wktfromdata = wktfromdata + $('.convertDMS2DDLong').val() + " " + $('.convertDMS2DDLat').val() + "))";
					}
				
					wktfromdata = wktfromdata.substring(0, wktfromdata.length-1) + ")";
					
					$(".wkt").val(wktfromdata);
				}
			}
		};
		
		function Utm2Wgs( X,Y,zone,sn) {
			if (sn=='S')
			{
				Y = Y - 10000000;
			}
			X = X - 500000;
			var sa = 6378137.000000;
			var sb = 6356752.314245;

		   var e = Math.pow( Math.pow(sa , 2) - Math.pow(sb , 2) , 0.5 ) / sa;
		   var e2 = Math.pow( Math.pow( sa , 2 ) - Math.pow( sb , 2 ) , 0.5 ) / sb;
		   var e2cuadrada = Math.pow(e2 , 2);
		   var c = Math.pow(sa , 2 ) / sb;

		   var S = ( ( zone * 6 ) - 183 ); 
		   var lat =  Y / ( 6366197.724 * 0.9996 );                         
		   var v =  (c * 0.9996)/ Math.pow( 1 + ( e2cuadrada * Math.pow( Math.cos(lat), 2 ))  , 0.5 ) ;
		   var a = X / v;
		   var a1 = Math.sin( 2 * lat );
		   var a2 = a1 * Math.pow( Math.cos(lat), 2);
		   var j2 = lat + ( a1 / 2 );
		   var j4 = ( ( 3 * j2 ) + a2 ) / 4;
		   var j6 = ( ( 5 * j4 ) + ( a2 * Math.pow( Math.cos(lat) , 2) ) ) / 3;
		   var alfa = ( 3 / 4 ) * e2cuadrada;
		   var beta = ( 5 / 3 ) * Math.pow(alfa , 2);
		   var gama = ( 35 / 27 ) * Math.pow(alfa , 3);
		   var Bm = 0.9996 * c * ( lat - alfa * j2 + beta * j4 - gama * j6 );
		   var b = ( Y - Bm ) / v;
		   var Epsi = ( ( e2cuadrada * Math.pow(a , 2)) / 2 ) * Math.pow( Math.cos(lat) , 2);
		   var Eps = a * ( 1 - ( Epsi / 3 ) );
		   var nab = ( b * ( 1 - Epsi ) ) + lat;
		   var senoheps = ( Math.exp(Eps) - Math.exp(-Eps) ) / 2;
		   var Delt = Math.atan(senoheps / Math.cos(nab) );
		   var TaO = Math.atan(Math.cos(Delt) * Math.tan(nab));
		   var longitude = (Delt *(180 / Math.PI ) ) + S;
		   var latitude = ( lat + ( 1 + e2cuadrada* Math.pow(Math.cos(lat), 2) - ( 3 / 2 ) * e2cuadrada * Math.sin(lat) * Math.cos(lat) * ( TaO - lat ) ) * ( TaO - lat ) ) * (180 / Math.PI);
		   var coord=[];
		   coord[0] = longitude;
		   coord[1] = latitude;
		   return coord;
		}

		function centerMap(longi, lati) {
			map.getView().fit(main_layer_global.getSource().getExtent());
			map.getView().setZoom(7);
		}

		function drawmap(){
			mousePositionControl= new ol.control.MousePosition({
				 coordinateFormat: ol.coordinate.createStringXY(4),
				projection:p_data_epsg,
				className: "custom-mouse-position",
				target: document.getElementById("mouse-position"),
				undefinedHTML: "&nbsp;"
			});
			scaleLineControl = new ol.control.ScaleLine();

			styleLine= new ol.style.Style({
			  fill: new ol.style.Fill({
				color: 'rgba(255, 255, 255, 0.2)'
			  }),
			  stroke: new ol.style.Stroke({
				color: '#ffcc33',
				width: 4
			  }),
			  image: new ol.style.Circle({
				radius: 7,
				fill: new ol.style.Fill({
				  color: '#ffcc33'
				})
			  })
			})
			
			source = new ol.source.Vector();
			vectorlayer = new ol.layer.Vector({
				source: source,
				style:styleLine
			});

			var styles = [
				'Road',
				'Aerial',
			  ];
			var layers = [];
			var i, ii;
			for (i = 0, ii = styles.length; i < ii; ++i) {
				layers.push(new ol.layer.Tile({
					visible: false,
					preload: Infinity,
					source: new ol.source.BingMaps({key: "Ai1X7hw9LHgPPF9BdnfLC2tTfhi5izHhCWJ4DCqREjqHBvDCsnBOfj3G3aCyoNwx",imagerySet: styles[i]  })
				}));
			}

			layers [styles.length] = vectorlayer;
			proj="";
			map = new ol.Map({
					target: 'map',
					layers: layers,
					view: new ol.View({
						projection:proj,
						center: ol.proj.fromLonLat([15,-4]),
						zoom: 7
					}),
					controls: ol.control.defaults({
							attributionOptions: ({collapsible: false})
					}).extend([mousePositionControl, scaleLineControl ])
			});

			var select = document.getElementById('layer-select');
			function onChange() {
				var style = select.value;
				for (var i = 0, ii = layers.length; i < ii; ++i) {
				  layers[i].setVisible(styles[i] === style);
				}
			}
			select.addEventListener('change', onChange);
			onChange();
			autoDraw=true;
		}
		
		function update_point_on_map( lati, longi, accu){
			drawmap(vectorlayer, lati, longi);
		}
		
		$("#cleanSelect").click(function(){
			if(autoDraw==true){
		   
			removeDarwinLayer(iLayer);
				//map.removeLayer(vectorlayer_local);
				autoDraw=false;
			}
			nbrpoints = 4;
			draw_points_input_fields(4);
			$('.nbrpoints').val(4);
			
			$('.latiDD_0').val(0);
			$('.longiDD_0').val(0);
			$('.lati_deg_0').val(0);
			$('.lati_min_0').val(0);
			$('.lati_sec_0').val(0);
			$( '.latns_0'+' option:selected' ).text("S");
			$('.longi_deg_0').val(0);
			$('.longi_min_0').val(0);
			$('.longi_sec_0').val(0);
			$( '.longew_0'+' option:selected' ).text("E");
			$('.longiUTM_0').val(0);
			$('.latiUTM_0').val(0);
			$('.zoneUTM_0').val(0);
			$('.dirUTM_0').val("S");
			$('.inp_search_WKT').val("");	
		});
		
		function fill_points_lines_from_wkt(origin){
			var wktval = $('.inp_search_WKT').val();
			var wktval2 = wktval.substring(wktval.indexOf("(")+1, wktval.length-1);
			var arraypoints = wktval2.split(","); 
			
			if(valueType == "polygon2"){
				nbrpoints = arraypoints.length-1;
				draw_points_input_fields(nbrpoints);
			}
			
			valueType = wktval.substring(0,wktval.indexOf("(")).toLowerCase();
			$('.typegeom').val(valueType);
			$('.points_for_geometry').html('<form class="form_points"><input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points</form>');
			
			if (valueType == "polygon"){
				nbrpointsfromwkt = arraypoints.length-1;
			}else{
				nbrpointsfromwkt = arraypoints.length;
			}

			$('.nbrpoints').val(nbrpointsfromwkt);
			draw_points_input_fields(nbrpointsfromwkt);

			if(origin != 0){		
				for (i=0;i<nbrpointsfromwkt;i++){
					var lat = arraypoints[i].substring(arraypoints[i].indexOf(" ")+1,arraypoints[i].length);
					var lng = arraypoints[i].substring(0,arraypoints[i].indexOf(" "));
					
					if(i==0){
						$(".convertDMS2DDLat").val(lat);
						$(".convertDMS2DDLong").val(lng);
						$(".geom_type").val(valueType);
					}
					
					if(i==0 & valueType == "polygon"){
						lng = lng.substring(1, lng.length); 
					}
					
					//DMS---------------------
					$(".latns_"+i +" option[value='N']").attr("selected", true);
					if(lat < 0){
						$(".latns_"+i +" option[value='S']").attr("selected", true);
					}
					$(".longew_"+i +" option[value='E']").attr("selected", true);
					if(lng < 0){
						$(".longew_"+i +" option[value='W']").attr("selected", true);
					}

					$('.longi_deg_'+i).val(Math.floor(Math.abs(lng)));
					$('.lati_deg_'+i).val(Math.floor(Math.abs(lat)));
					var decimalLongitude=Math.abs(lng)-Math.floor(Math.abs(lng));
					var decimalLongitudeResultMinute=Math.floor(decimalLongitude*60);
					$('.longi_min_'+i).val(decimalLongitudeResultMinute);
					var decimalLatitude=Math.abs(lat)-Math.floor(Math.abs(lat));
					var decimalLatitudeResultMinute=Math.floor(decimalLatitude*60);
					$('.lati_min_'+i).val(decimalLatitudeResultMinute);
					var decimalsLongitudeForSeconds=Math.abs(lng)-Math.floor(Math.abs(lng))-(decimalLongitudeResultMinute/60);
					$('.longi_sec_'+i).val(decimalsLongitudeForSeconds*3600);
					var decimalsLatitudeForSeconds=Math.abs(lat)-Math.floor(Math.abs(lat))-(decimalLatitudeResultMinute/60);
					$('.lati_sec_'+i).val(decimalsLatitudeForSeconds*3600);
					
					//DD----------------------				
					$('.latiDD_'+i).val(lat);
					$('.longiDD_'+i).val(lng);
					
					//UTM---------------------
					var result = Wgs2Utm(lng,lat);
					//ZoneNumber = Math.floor((parseInt(lng) + 180)/6) + 1;

					$('.latiUTM_'+i).val(result[1]);
					$('.longiUTM_'+i).val(result[0]);
					$('.zoneUTM_'+i).val(result[2]);
					if(lat < 0){
						$(".dirUTM_"+i +" option[value='S']").attr("selected", true);
					}
					else{
						$(".dirUTM_"+i +" option[value='N']").attr("selected", true);
					}
					
				}
			}
			
			if(origin != 2){
				$('.origcoordRO').html($('.origcoord').val());
				$('.epsgRO').html($('.inp_search_epsg').val());
			}
			
			
		};
		
		function fill_points_lines_from_original_values(){
			if ($('.origcoord').val().length > 0){
				var coords = $('.origcoord').val().split(","); 
				$('.points_for_geometry').html('<form class="form_points"> <input class="nbrpoints" type="integer" name="points" maxlength="2" size="3"> points</form>');
				
				var nbrpointsfromorig = coords.length;
				draw_points_input_fields(nbrpointsfromorig);
				valueType = $('.inp_search_WKT').val().substring(0,$('.inp_search_WKT').val().indexOf("(")).toLowerCase();
				$('.typegeom').val(valueType);
				$('.nbrpoints').val(nbrpointsfromorig);

				for (i=0;i<nbrpointsfromorig;i++){
					singlecoord = coords[i].split(" ")
					if (source_selected == "DD"){
						//14.1294 -3.3919,    14.931 -2.931,15.7775 -3.907,    14.810833 -4.4880
						$(".longiDD_"+i).val(singlecoord[0]);
						$(".latiDD_"+i).val(singlecoord[1]);
					}
					if (source_selected == "DMS"){
						//51Â°4'2"N      3Â°4'31.0000000000008"E,    51Â°3'12"N 4Â°6'0"E,    51Â°3'5"N 2Â°8'0"E
						$(".latns_"+i +" option[value='N']").attr("selected", true);
						if(singlecoord[0].substring(singlecoord[0].length - 1,singlecoord[0].length) == "S"){
							$(".latns_"+i +" option[value='S']").attr("selected", true);
						}
						$(".longew_"+i +" option[value='E']").attr("selected", true);
						if(singlecoord[1].substring(singlecoord[1].length - 1,singlecoord[1].length) == "W"){
							$(".longew_"+i +" option[value='W']").attr("selected", true);
						}

						$('.longi_deg_'+i).val(singlecoord[1].substring(0,singlecoord[1].indexOf("Â°")));
						$('.lati_deg_'+i).val(singlecoord[0].substring(0,singlecoord[0].indexOf("Â°")));
						$('.longi_min_'+i).val(singlecoord[1].substring(singlecoord[1].indexOf("Â°")+1,singlecoord[1].indexOf("'")));
						$('.lati_min_'+i).val(singlecoord[0].substring(singlecoord[0].indexOf("Â°")+1,singlecoord[0].indexOf("'")));
						$('.longi_sec_'+i).val(singlecoord[1].substring(singlecoord[1].indexOf("'")+1,singlecoord[1].indexOf('"')));
						$('.lati_sec_'+i).val(singlecoord[0].substring(singlecoord[0].indexOf("'")+1,singlecoord[0].indexOf('"')));
					}
					if (source_selected == "UTM"){
						//110000 9520000 33 S,120000 9530000 33 S,115000 9540000 33 S
						$(".dirUTM_"+i +" option[value='N']").attr("selected", true);
						if(singlecoord[3] == "S"){
							$(".dirUTM_"+i +" option[value='S']").attr("selected", true);
						}

						$('.longiUTM_'+i).val(singlecoord[0]);
						$('.latiUTM_'+i).val(singlecoord[1]);
						$('.zoneUTM_'+i).val(singlecoord[2]);
					}
				}
				$('.origcoordRO').html($('.origcoord').val());
				$('.epsgRO').html($('.inp_search_epsg').val());
			}
		}
			
		function Wgs2Utm( lan1,fi) {
			var a=6378137.000;
			var b=6356752.314;
			var f=(a-b)/a;
			var e2=Math.sqrt((Math.pow(a,2)-Math.pow(b,2))/Math.pow(b,2));
			var e=Math.sqrt((Math.pow(a,2)-Math.pow(b,2))/Math.pow(a,2));

			var zone;
			var lan0;
			if (lan1>0)
			{
				var zone=30+Math.ceil(lan1/6);
				lan0=Math.floor(lan1/6)*6+3;
			}
			else
			{
				var zone=30-Math.floor(Math.abs(lan1)/6);
				lan0=-Math.floor(Math.abs(lan1)/6)*6-3;
			}
			var lan=lan1-lan0;
			lan=lan*Math.PI/180;
			fi=fi*Math.PI/180;
			var N=a/Math.pow(1-Math.pow(e,2)*Math.pow(Math.sin(fi),2),0.5);
			var M=a*(1-Math.pow(e,2))/Math.pow((1-(Math.pow(e,2)*Math.pow(Math.sin(fi),2))),(3/2));
			var t=Math.tan(fi);
			var p=N/M;

			var k0=0.9996;

			var term1=Math.pow(lan,2)*p*Math.pow(Math.cos(fi),2)/2;
			var term2=Math.pow(lan,4)*Math.pow(Math.cos(fi),4)*(4*Math.pow(p,3)*(1-6*Math.pow(t,2))+Math.pow(p,2)*(1+24*Math.pow(t,2))-4*p*Math.pow(t,2))/24;
			var term3=Math.pow(lan,6)*Math.pow(Math.cos(fi),6)*(61-148*Math.pow(t,2)+16*Math.pow(t,4))/720;

			var Kutm=k0*(term1+term2+term3);

			term1=Math.pow(lan,2)*p*Math.pow(Math.cos(fi),2)*(p-Math.pow(t,2))/6;
			term2=Math.pow(lan,4)*Math.pow(Math.cos(fi),4)*(4*Math.pow(p,3)*(1-6*Math.pow(t,2))+Math.pow(p,2)*(1+8*Math.pow(t,2))-Math.pow(p,2)*Math.pow(t,2)+Math.pow(t,4))/120;
			term3=Math.pow(lan,6)*Math.pow(Math.cos(fi),6)*(61-479*Math.pow(t,2)+179*Math.pow(t,4)-Math.pow(t,6))/5040;

			var Xutm=500000+k0*lan*N*Math.cos(fi)*(1+term1+term2+term3);

			var A0=1-0.25*Math.pow(e,2)-3/64*Math.pow(e,4)-5/256*Math.pow(e,6);
			var A2=3/8*(Math.pow(e,2)+0.25*Math.pow(e,4)+15/128*Math.pow(e,6));
			var A4=15/256*(Math.pow(e,4)+0.75*Math.pow(e,6));
			var A6=35/3072*Math.pow(e,6);

			var sfi=a*(A0*fi-A2*Math.sin(2*fi)+A4*Math.sin(4*fi)-A6*Math.sin(6*fi));

			term1=Math.pow(lan,2)*N*Math.sin(fi)*Math.cos(fi)/2;
			term2=Math.pow(lan,4)*N*Math.sin(fi)*Math.pow(Math.cos(fi),3)*(4*Math.pow(p,2)+p-Math.pow(t,2))/24;
			term3=Math.pow(lan,6)*N*Math.sin(fi)*Math.pow(Math.cos(fi),5)*(8*Math.pow(p,4)*(11-24*Math.pow(t,2))-28*Math.pow(p,3)*(1-6*Math.pow(t,2))+Math.pow(p,2)*(1-32*Math.pow(t,2))-p*2*Math.pow(t,2)+Math.pow(t,4));
			var term4=Math.pow(lan,8)*N*Math.sin(fi)*Math.pow(Math.cos(fi),7)*(1385-3111*Math.pow(t,2)+543*Math.pow(t,4)-Math.pow(t,6));

			var Yutm=k0*(sfi+term1+term2+term3+term4);
			var sn='N';
			if (fi <0)
			{
				Yutm = 10000000 + Yutm;
				sn='S';
			}
			
			//Xutm.toString().concat(" ; " + Yutm.toString() + " "+zone.toString()+sn) ;
			var results = [];
			results[0] = Xutm.toString();
			results[1] = Yutm.toString();
			results[2] = zone.toString();
			results[3] = sn.toString();
			
			return results;
		}
		
		function checkCoordSourceState(){
			source_selected=$( ".inp_searchcoord_source" ).val();
			var showDMS='display: table-cell';
			var showDD='display: None';
			var showUTM='display: None';

			if(source_selected=="DD")
			{
				showDMS='display: None';
				showDD='display: table-cell';
				showUTM='display: None';
				$('.inp_search_epsg').val(4326);
				$('.epsgRO').html(4326);
			}
			else if(source_selected=="DMS"){
				showDMS='display: table-cell';
				showDD='display: None';
				showUTM='display: None';
				$('.inp_search_epsg').val(4326);
				$('.epsgRO').html(4326);
			}
			else if(source_selected=="UTM"){
				showDMS='display: None';
				showDD='display: None';
				showUTM='display: table-cell';
				if($('.zoneUTM_0').val() != 0){
					var dir = 0;
					if($('.dirUTM_0').val() == "N"){
						dir = 326;
					}else{
						dir = 327;
					}
					$('.inp_search_epsg').val(dir+$('.zoneUTM_0').val());
					$('.epsgRO').html(dir+$('.zoneUTM_0').val());
				}else{
					$('.inp_search_epsg').val(0);
					$('.epsgRO').html(0);
				}
			}
			$('.GroupDMS').attr('style',showDMS );
			$('.GroupDD').attr('style', showDD);
			$('.GroupUTM').attr('style', showUTM);
		}

		$(".inp_searchcoord_source").change(
			function(){
				checkCoordSourceState();
				if($('.inp_search_WKT').val().length != 0){
					fill_points_lines_from_wkt(2);
				}
			}
		);

		function convertCoordinatesDMS2DD(){
			var latD=0.0;
			var latM=0.0;
			var latS=0.0;
			var latSign=1;
			// $(".lati_deg_0").val()???
			if($(".DMSLatDeg").val().length > 0){
				latD=$(".DMSLatDeg").val().replace(/\,/, ".");
			}
			if($(".DMSLatMin").val().length > 0){
				latM=$(".DMSLatMin").val().replace(/\,/, ".");
			}
			if($(".DMSLatSec").val().length > 0){
				latS=$(".DMSLatSec").val().replace(/\,/, ".");
			}
			if($(".DMSLatSign").val().length > 0){
				latSign=$(".DMSLatSign").val();
			}
			var latDeci= latSign *(parseFloat(latD) + ( parseFloat(latM)/60) + ( parseFloat(latS)/3600));
			if($.isNumeric(latDeci)==false){
				alert('values for DMS coordinates doesn\'t seem numeric, please check your input');
			}
			$(".convertDMS2DDLat").val(latDeci);
			
			
			var longD=0.0;
			var longM=0.0;
			var longS=0.0;
			var longSign=1;
			if($(".DMSLongDeg").val().length > 0){
				longD=$(".DMSLongDeg").val().replace(/\,/, ".");
			}
			if($(".DMSLongMin").val().length > 0){
				longM=$(".DMSLongMin").val().replace(/\,/, ".");
			}
			if($(".DMSLongSec").val().length > 0){
				longS=$(".DMSLongSec").val().replace(/\,/, ".");
			}
			if($(".DMSLongSign").val().length > 0){
				longSign=$(".DMSLongSign").val();
			}
			var longDeci= longSign *(parseFloat(longD) + ( parseFloat(longM)/60) + ( parseFloat(longS)/3600));
			if($.isNumeric(longDeci)==false){
				alert('values for DMS coordinates doesn\'t seem numeric, please check your input');
			}else{
				$(".convertDMS2DDLong").val(longDeci);
			}
			update_point_on_map($(".convertDMS2DDLat").val(),$(".convertDMS2DDLong").val(), null);
		}

		function convertCoordinatesDD2DMS(){
			var lat=$(".convertDMS2DDLat").val();
			var lng=$(".convertDMS2DDLong").val();
			//longitude
			$(".DMSLongDeg").val(Math.floor(Math.abs(lng)));
			$(".DMSLongSign option").filter(function(){
					if(lng<0.0){
						return $(this).val()<0;
					}else{
						return $(this).val()>0;
					}
				}).attr('selected',true);
			var decimalLongitude=Math.abs(lng)-Math.floor(Math.abs(lng));
			decimalLongitudeResultMinute=Math.floor(decimalLongitude*60);
			$(".DMSLongMin").val(decimalLongitudeResultMinute);
			decimalsLongitudeForSeconds=Math.abs(lng)-Math.floor(Math.abs(lng))-(decimalLongitudeResultMinute/60);
			$(".DMSLongSec").val(decimalsLongitudeForSeconds*3600);
			  
			  //latitude
			$(".DMSLatDeg").val(Math.floor(Math.abs(lat)));
			$(".DMSLatSign option").filter(function(){
				if(lat<0.0){
					return $(this).val()<0;
				}else{
					return $(this).val()>0;
				}
			}).attr('selected',true);
			var decimalLatitude=Math.abs(lat)-Math.floor(Math.abs(lat));
			decimalLatitudeResultMinute=Math.floor(decimalLatitude*60);
			$(".DMSLatMin").val(decimalLatitudeResultMinute);
			decimalsLatitudeForSeconds=Math.abs(lat)-Math.floor(Math.abs(lat))-(decimalLatitudeResultMinute/60);
			$(".DMSLatSec").val(decimalsLatitudeForSeconds*3600);
			update_point_on_map($(".convertDMS2DDLat").val(),$(".convertDMS2DDLong").val(), null);
		}

		$(".convertDMS2DDGeneralOnLeave").mouseleave(function(event){
			var idControl=event.target.id;
			var value=$("#"+idControl).val();
			if(value.trim().length>0){
				convertCoordinatesDMS2DD();
			}
		});

		$(".convertDMS2DDGeneralOnLeave").change(function(event){
				coordViewMode=false;
		});

		$(".convertDD2DMSGeneral").change(function(event){
				coordViewMode=false;
				convertCoordinatesDD2DMS();
		});

		$(".convertDMS2DDGeneralOnChange").change(function(event){
				coordViewMode=false;
				convertCoordinatesDMS2DD();
		});

		$(".convertDD2DMSGeneral").mouseleave(function(event){
			var idControl=event.target.id;
			var value=$("#"+idControl).val();
			if(value.trim().length>0){
				convertCoordinatesDD2DMS();
			}
		});

		//to prevent accidental updates of coordibates on mouseleave (as the  GTU are always displayed in "edit" mode)
		function detectBothValCoordExisting(){
			var booleanAlreadyExisting=false;
			var latDD=$(".convertDMS2DDLat").val().trim();
			var latDMS=$(".DMSLatDeg").val().trim();
			var longDD=$(".convertDMS2DDLong").val().trim();
			var longDMS=$(".DMSLongDeg").val().trim();
			if((latDD.length>0||latDMS.length>0)&&(longDD.length>0||longDMS.length>0))
			{
				booleanAlreadyExisting=true;
			}
			return booleanAlreadyExisting;
		}

		//UTM
		$(".UTM2DDGeneralOnLeave").change(function(event){
			convertUTM();
		});

		function convertUTM(){
			zone=$(".UTMZone").val();
			//zone="UTM WGS84 zone 31N";
			//zoneUTM=+proj=utm +zone=8431  +datum=WGS84 +units=m +no_defs
			
			var zoneUTM =  initUTM('tmp', zone.replace( /\D+/g, ''), zone.replace( /[0-9]*/g, ''));

			var wgs84=proj4('EPSG:4326');
			var lat=$(".UTMLat").val();
			var lng=$(".UTMLong").val();
			var conv=proj4(zoneUTM,wgs84,[lng,lat]);

			$(".convertDMS2DDLat").val(conv[1].toFixed(4));
			$(".convertDMS2DDLong").val(conv[0].toFixed(4));
			update_point_on_map($(".convertDMS2DDLat").val(),$(".convertDMS2DDLong").val(), null);
		}

		function initUTM(name, zone, direction ){
			var dir="";
			if(direction=="S"){
				dir="+ south";
			}
			var strProj='+proj=utm +zone='+zone+' '+dir+' +datum=WGS84 +units=m +no_defs ';

			return strProj;
		}
/*************************** For Search Form *************************/
		var results_layer;
		var accuracy_layer;
		var number_to_fetch = 100;
		var mg;
		function initSearchMap() {
		  $('#show_accuracy').change(function(){
			if(results_layer) {
			  if($('#show_accuracy').is(':checked')) {
				map.addLayer(accuracy_layer);
			  } else {
				map.removeLayer(accuracy_layer);
			  }
			}
		  });

		  $('#show_as_map').click(function(){
			if($(this).is(':checked')) {
			 // $('#map_search_form').show();
			  map.invalidateSize();
			 /* if($('#gtu_filters_lat_from').val() != '' &&  $('#gtu_filters_lat_to').val() != '' &&
				$('#gtu_filters_lon_from').val() != '' &&   $('#gtu_filters_lat_to').val() != '')
			  {
				  try{
					map.fitBounds([
					  [ $('#gtu_filters_lat_from').val(), $('#gtu_filters_lon_from').val()],
					  [ $('#gtu_filters_lat_to').val(),  $('#gtu_filters_lon_to').val()]
					]);
				  }
				  catch (e) {
					map.setView([0,0], 2);
				  }
			  } else {
				map.setView([0,0], 2);
			  }*/
			  if($('#gtu_filter').length) {
				//$(this).closest('form').removeClass('search_form');
				$('#gtu_filter').unbind('submit.sform');
				$('#gtu_filter').bind('submit.map_form',map_submit);
				$('.search_results_content').html('');
			  }
			  $('#lat_long_set table').hide();
			} else {
			  if($('#gtu_filter').length) {
				//$(this).closest('form').addClass('search_form');
				$('#gtu_filter').unbind('submit.map_form');
				$('#gtu_filter').bind('submit.sform',$('.catalogue_gtu').data('choose_form').search_form_submit);
			  }
			  $('#lat_long_set table').show();
			  $('#map_search_form').hide();
			}
		  });

		  $('#lat_long_set .clear_prop').click(function(event) {
			event.preventDefault();
			$(this).closest('tr').find('input').val('');
		  });

		  map = L.map('smap', {minZoom: 2} ).setView([0,0], 3);
		  accuracy_layer = L.layerGroup([]);
		  if($('#show_accuracy').is(':checked'))
			accuracy_layer.addTo(map);
		  // add an OpenStreetMap tile layer
		  L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
		  }).addTo(map);

		  map.on('move', updateLatLong);

		  //Custom radius and icon create function
		  mg = new L.MarkerClusterGroup({
				  maxClusterRadius: 25,
				  spiderfyOnMaxZoom: true, showCoverageOnHover: false, zoomToBoundsOnClick: true
		  });
		  map.addLayer(mg);
		}

		function updateLatLong() {
		  bounds = map.getBounds();
		  if($('#show_as_map').is(':checked')) {
			if($('#gtu_filters_lat_from').length) {
			  $('#gtu_filters_lat_from').val(bounds.getNorthWest().wrap().lat );
			  $('#gtu_filters_lon_from').val(bounds.getNorthWest().wrap().lng);

			  $('#gtu_filters_lat_to').val(bounds.getSouthEast().wrap().lat);
			  $('#gtu_filters_lon_to').val(bounds.getSouthEast().wrap().lng);
			}else if($('#specimen_search_filters_lat_from').length) {
			  $('#specimen_search_filters_lat_from').val(bounds.getNorthWest().wrap().lat );
			  $('#specimen_search_filters_lon_from').val(bounds.getNorthWest().lng);

			  $('#specimen_search_filters_lat_to').val(bounds.getSouthEast().wrap().lat);
			  $('#specimen_search_filters_lon_to').val(bounds.getSouthEast().wrap().lng);

			}

		  }
		}
					
		function map_submit(event) {
		  event.preventDefault();

		  $('.paging_info').hide();
		  if(results_layer) {
			// Clear previous search
			mg.clearLayers();
			results_layer.clearLayers();
			accuracy_layer.clearLayers();
		  }

		  //Load results
		  $.ajax({
			type: "POST",
			url: $('#gtu_filter').attr('action')+'/format/json?gtu_filters%5Brec_per_page%5D=' + number_to_fetch +'&'+ $('#gtu_filter').serialize(),
			dataType: 'json',
			success: function (response) {
			  results_layer = L.geoJson(response, {
				pointToLayer: function (feature, latlng) {
				  var fg = L.marker(latlng).bindPopup(feature.properties.content);
				  L.circle(latlng, feature.properties.accuracy)
					.on('click', function() {
					 fg.openPopup();
					})
					.addTo(accuracy_layer);
				  return fg;
				}
			  }).addTo(mg);
			}
		  });

		  //Load Page counts
		  $.ajax({
			url: $('#gtu_filter').attr('action')+'/format/text/extd/count?gtu_filters%5Brec_per_page%5D=' + number_to_fetch +'&'+ $('#gtu_filter').serialize(),
			success: function(html) {
			  $('.paging_info .inner_text').html(html);
			  $('.paging_info').show();
			}
		  });
		  return false;
		}

	</script>

{% endblock %}
